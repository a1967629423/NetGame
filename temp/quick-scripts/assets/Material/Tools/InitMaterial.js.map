{"version":3,"sources":["InitMaterial.ts"],"names":[],"mappings":";;;;;AAAA,0CAAyC;AAGzC,oBAAoB;AACpB,kFAAkF;AAClF,yFAAyF;AACzF,mBAAmB;AACnB,4FAA4F;AAC5F,mGAAmG;AACnG,8BAA8B;AAC9B,4FAA4F;AAC5F,mGAAmG;AAE7F,IAAA,kBAAmC,EAAlC,oBAAO,EAAE,sBAAQ,CAAkB;AAI1C;IAA0C,gCAAY;IAFtD;QAAA,qEAiBC;QAZG,kBAAY,GAAU,EAAE,CAAA;QACxB,iBAAW,GAAkB,IAAI,CAAC;;QAUlC,iBAAiB;IACrB,CAAC;IAVG,6BAAM,GAAN;QAAA,iBAIC;QAFG,IAAI,WAAW,GAAG,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,UAAA,CAAC,IAAE,OAAA,CAAC,CAAC,YAAY,KAAG,KAAI,CAAC,YAAY,EAAlC,CAAkC,CAAC,CAAC;QAC7E,IAAI,CAAC,WAAW,GAAG,IAAI,WAAW,CAAC,mBAAmB,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;IAC9E,CAAC;IACD,4BAAK,GAAL;QACI,YAAY,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,EAAC,IAAI,CAAC,WAAW,CAAC,CAAC;IACzD,CAAC;IATD;QADC,QAAQ;sDACe;IAHP,YAAY;QAFhC,OAAO;QACP,qBAAS,CAAC,IAAI;OACM,YAAY,CAehC;IAAD,mBAAC;CAfD,AAeC,CAfyC,EAAE,CAAC,SAAS,GAerD;kBAfoB,YAAY","file":"","sourceRoot":"..\\..\\..\\..\\..\\assets\\Material\\Tools","sourcesContent":["import { ShaderDec } from \"../ShaderDec\";\r\nimport { ShaderMaterial } from \"../ShaderMaterial\";\r\n\r\n// Learn TypeScript:\r\n//  - [Chinese] https://docs.cocos.com/creator/manual/zh/scripting/typescript.html\r\n//  - [English] http://www.cocos2d-x.org/docs/creator/manual/en/scripting/typescript.html\r\n// Learn Attribute:\r\n//  - [Chinese] https://docs.cocos.com/creator/manual/zh/scripting/reference/attributes.html\r\n//  - [English] http://www.cocos2d-x.org/docs/creator/manual/en/scripting/reference/attributes.html\r\n// Learn life-cycle callbacks:\r\n//  - [Chinese] https://docs.cocos.com/creator/manual/zh/scripting/life-cycle-callbacks.html\r\n//  - [English] http://www.cocos2d-x.org/docs/creator/manual/en/scripting/life-cycle-callbacks.html\r\n\r\nconst {ccclass, property} = cc._decorator;\r\n\r\n@ccclass\r\n@ShaderDec.Init\r\nexport default class InitMaterial extends cc.Component {\r\n    Materials:ShaderDec.MaterialsSave[];\r\n    @property\r\n    MaterialName:string = ''\r\n    nowMaterial:ShaderMaterial = null;\r\n    onLoad()\r\n    {\r\n        var constructor = this.Materials.find(v=>v.MaterialName===this.MaterialName);\r\n        this.nowMaterial = new constructor.MaterialConstructor(this.MaterialName);\r\n    }\r\n    start () {\r\n        ShaderUtitly.setMaterial(this.node,this.nowMaterial);\r\n    }\r\n\r\n    // update (dt) {}\r\n}\r\n"]}