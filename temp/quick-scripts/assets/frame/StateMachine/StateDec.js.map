{"version":3,"sources":["StateDec.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"..\\..\\..\\..\\..\\assets\\frame\\StateMachine","sourcesContent":["import { MSM } from \"./StateMachine\";\r\ntype SMSave = {machine:{new():MSM.StateMachine},sname:string};\r\nexport module MSMDsc {\r\n    var SMDB: SM[] = [];\r\n    /**\r\n     * \r\n     * 状态机装饰器\r\n     */\r\n    export function mStateMachine<T extends MSM.StateMachine>(target: { prototype: T }) {\r\n        if (!SMDB.find(value => { return value.sm == target })) {\r\n            var p = { sm: target, sts: [], stateRelation: [], eventsName: [] };\r\n            SMDB.push(p);\r\n            target.prototype.strelation = p.stateRelation;\r\n            target.prototype.LSMDB = p;\r\n        }\r\n    }\r\n    /**\r\n     * 状态装饰器\r\n     * @param name 状态名\r\n     * @param su 所依附的状态机\r\n     */\r\n    export function mState<T extends MSM.StateMachine, P extends MSM.State>(name: string, su: { new(): T }) {\r\n        return (target: { new(ctx: T): P }) => {\r\n            var gsu = SMDB.find(value => { return value.sm == su });\r\n            if (gsu)\r\n                gsu.sts.push({ st: target, name: name });\r\n            else {\r\n                var p = { sm: su, sts: [{ st: target, name: name }], stateRelation: [], eventsName: [] };\r\n                su.prototype.strelation = p.stateRelation;\r\n                su.prototype.LSMDB = p;\r\n                SMDB.push(p);\r\n            }\r\n            target.prototype.stateName = name;\r\n            var sus:SMSave[] = target.prototype['_su_']\r\n            if(!sus)\r\n            {\r\n                sus = [{machine:su,sname:name}];\r\n                target.prototype['_su_'] = sus;\r\n            }\r\n            else\r\n            {\r\n                sus.push({machine:su,sname:name});\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * 默认状态装饰器\r\n     * 默认状态会在状态机初始化时自动切换，默认状态只允许一个，切换默认状态的事件名为start\r\n     */\r\n    export function mDefaultState<T extends MSM.StateMachine, P extends MSM.State>(target: { new(cxt: MSM.StateMachine): P }) {\r\n        function initDefault() {\r\n            var _su: SMSave[] = target.prototype['_su_'];\r\n            if (_su) {\r\n                var su = _su[0].machine;\r\n                if (su.prototype.strelation.find(value => { return value.eventname === 'start' })) {\r\n                    console.log(\"DefaultState only one\");\r\n                    return;\r\n                }\r\n                su.prototype.strelation.push({ eventname: 'start', source: null, target: target, type: 2 });\r\n            }\r\n        }\r\n        if (!target.prototype['_su_']) {\r\n            setTimeout(() => { initDefault() })\r\n        }\r\n        else {\r\n            initDefault()\r\n        }\r\n    }\r\n    /**\r\n     * 使用或创建一个过渡事件，当事件被触发时会将此状态切换为当前状态\r\n     * @param targenamet 目标状态名\r\n     * @param eventname 触发事件名\r\n     */\r\n    export function mLinkTo<T extends MSM.State, P extends MSM.StateMachine>(targenamet: string, eventname: string,applyAllMachine:boolean = false) {\r\n        var e_name = eventname;\r\n        var t_name = targenamet;\r\n        function initLink(tar: { new(cxt: P): T }) {\r\n            var gsu: SM;\r\n            var _su: SMSave[] = tar.prototype['_su_'];\r\n            if (!_su) {\r\n                console.error(\"su is undefind\");\r\n                return;\r\n            }\r\n            var su  =_su[0].machine;\r\n            if (gsu = SMDB.find(value => { return value.sm == su })) {\r\n                var linkc = gsu.sts.find(value => { return value.name == t_name });\r\n                if (linkc) {\r\n                    gsu.stateRelation.push({ source: tar, target: linkc.st, eventname: e_name, type: 1 });\r\n                }\r\n                else {\r\n                    gsu.stateRelation.push({ source: tar, target: t_name, eventname: e_name, type: 1 });\r\n                }\r\n                if (!gsu.eventsName.find(value => { return value === e_name })) gsu.eventsName.push(e_name)\r\n            }\r\n        }\r\n        return (target: { new(cxt: P): T }) => {\r\n            if (!target.prototype['_su_']) {\r\n                console.warn('mState应该声明在前面:' + target.name);\r\n                setTimeout(() => { initLink(target) });\r\n            }\r\n            else {\r\n                initLink(target);\r\n            }\r\n        }\r\n    }\r\n    function initAttach<T extends MSM.State, P extends MSM.StateMachine>(tar: { new(cxt: P): T }, eventname: string,applyAllMachine:boolean = false) {\r\n        var gsu: SM;\r\n        var _su: SMSave[] = tar.prototype['_su_'];\r\n        if (!_su) {\r\n            console.error(\"su is undefind\");\r\n            return;\r\n        }\r\n        if(applyAllMachine)\r\n        {\r\n            for(var idx in _su)\r\n            {\r\n                var su = _su[idx].machine;\r\n                if (gsu = SMDB.find(value => value.sm === su)) {\r\n                    gsu.stateRelation.push({ source: null, target: tar, eventname: eventname, type: 4 })\r\n                    if (!gsu.eventsName.find(value => { return value === eventname })) gsu.eventsName.push(eventname);\r\n                }\r\n            }\r\n        }\r\n        else\r\n        {\r\n            var su = _su[0].machine;\r\n            if (gsu = SMDB.find(value => value.sm === su)) {\r\n                gsu.stateRelation.push({ source: null, target: tar, eventname: eventname, type: 4 })\r\n                if (!gsu.eventsName.find(value => { return value === eventname })) gsu.eventsName.push(eventname);\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * 作为Attach状态，当事件被触发时会将此状态附加到状态机上\r\n     * @param eventname 事件名\r\n     */\r\n    export function mAttach<T extends MSM.State, P extends MSM.StateMachine>(eventname: string,applyAllMachine:boolean = false) {\r\n        return (target: { new(cxt: P): T }) => {\r\n            if (!target.prototype['_su_']) {\r\n                setTimeout(() => { initAttach(target, eventname),applyAllMachine })\r\n            } else {\r\n                initAttach(target, eventname,applyAllMachine);\r\n            }\r\n        }\r\n    }\r\n    function changegsu<T extends MSM.State, P extends MSM.StateMachine>(target: { new(ctx: P): T },applyAllMachine:boolean = false) {\r\n        var gsu: SM;\r\n        var _su: SMSave = target.prototype['_su_'];\r\n        if (!_su) {\r\n            console.error(\"su is undefind\");\r\n            return;\r\n        }\r\n        function changeoperator(su:{new():P})\r\n        {\r\n            if (gsu = SMDB.find(value => value.sm === su)) {\r\n                var tars: SR[] = []\r\n                gsu.stateRelation.forEach(value => {\r\n                    if (value.target === target) {\r\n                        tars.push(value);\r\n                    }\r\n                })\r\n                if (tars.length !== 0) {\r\n                    tars.forEach(sr => {\r\n                        sr.type |= 8;\r\n                    });\r\n                }\r\n                else {\r\n                    console.warn('mAttach或mLinkTo应该在前面声明')\r\n                    setTimeout(() => {\r\n                        gsu.stateRelation.forEach(value => {\r\n                            if (value.target === target) {\r\n                                tars.push(value);\r\n                            }\r\n                        })\r\n                        if (tars.length !== 0) {\r\n                            tars.forEach(sr => {\r\n                                sr.type |= 8;\r\n                            });\r\n                        }\r\n                    })\r\n                }\r\n            }\r\n        }\r\n        if(applyAllMachine)\r\n        {\r\n            for(var idx in _su)\r\n            {\r\n                changeoperator(_su[idx]);\r\n            }\r\n        }\r\n        else\r\n        {\r\n            changeoperator(_su[0]);\r\n        }\r\n    }\r\n    /**\r\n     * 保持此附加状态唯一，需要先使用附加状态装饰器\r\n     * \r\n     */\r\n    export function mUnique<T extends MSM.State, P extends MSM.StateMachine>(applyAllMachine:boolean = false) {\r\n        return function(target: { new(ctx: P): T })\r\n        {\r\n            if (!target.prototype['_su_']) {\r\n                console.warn('mState应该在前面声明');\r\n                setTimeout(() => {\r\n                    changegsu(target,applyAllMachine)\r\n                });\r\n            }\r\n            else {\r\n                changegsu(target,applyAllMachine);\r\n            }\r\n        }\r\n    }\r\n    export function mSyncFunc<P extends MSM.StateMachine>(target: P, methodName: string, descriptor: TypedPropertyDescriptor<any>) {\r\n        setTimeout(() => {\r\n            var m = target[methodName]\r\n            target[methodName] = function () {\r\n                var sm = this.nowState[methodName]\r\n                if (sm) sm.apply(this.nowState, arguments)\r\n                m.apply(this, arguments)\r\n            }\r\n        })\r\n\r\n    }\r\n    export function mSyncAttachFunc<P extends MSM.StateMachine>(target: P, methodName: string, descriptor: TypedPropertyDescriptor<any>) {\r\n        setTimeout(() => {\r\n            var m = target[methodName]\r\n            target[methodName] = function (...arg) {\r\n                var op = MSM.OperatorStruct.getinstance()\r\n                this.forEachAttach(methodName, op, ...arg)\r\n                arg.push(op);\r\n                if(m)m.apply(this, arg)\r\n            }\r\n        })\r\n    }\r\n    //当actionfunction的name项为空时，使用idx作为name\r\n    var actionNameIdx: number = 1;\r\n    type actionData = { nowTime: number, direction: boolean ,iterator:any}\r\n    /**\r\n     * 标识为动作函数，在每次update时调用，每次调用传入dt。注：无论duration设置多长dt始终为0 - 1\r\n     * 基本与Cocos Creator的Action保持一致\r\n     * @param duration 持续时间\r\n     * @param havereverse 是否包括返回行为\r\n     * @param loopCount 循环次数\r\n     * @param callback 动作完成回调\r\n     * @param name 动作名\r\n     */\r\n    export function ActionUpdate<T extends MSM.State>(duration: number, havereverse: boolean = true, loopCount: number = 0, callback: (this: T) => any = null, name?: string) {\r\n        return (target: T, methodName: string, descriptor: TypedPropertyDescriptor<any>) => {\r\n            var oldStart = target.Start;\r\n            //init action pool\r\n            var actions = target['__actions'];\r\n            if (!actions) target['__actions'] = [];\r\n            var ad: actionData = target['__actionData'];\r\n            if (!ad) {\r\n                ad = { nowTime: 0, direction: true ,iterator:null}\r\n                target['__actionData'] = ad;\r\n            }\r\n            var actionFunction = target[methodName];\r\n            //set action name\r\n            var actionName = name\r\n            if (!actionName) actionName = 'action.' + actionNameIdx;\r\n            actionFunction['__actionName'] = actionName;\r\n            target.Start = function () {\r\n                oldStart.apply(this, arguments);\r\n                var iter = this.context.startCoroutine_Auto((function* (_this) {\r\n                    if (loopCount > 0) {\r\n                        var count = havereverse ? loopCount * 2 : loopCount;\r\n                        while (count) {\r\n                            var dt = yield MSM.AwaitNextUpdate.getInstance();\r\n                            let dir = ad.direction;\r\n                            let nowTime = ad.nowTime;\r\n                            if (dir ? nowTime < duration : nowTime >= 0) {\r\n                                _this[methodName](nowTime === 0 ? 0 : nowTime / duration);\r\n                                ad.nowTime += dt * (dir ? 1 : -1);\r\n                            }\r\n                            else {\r\n                                count--;\r\n                                if (havereverse) {\r\n                                    ad.nowTime = dir ? duration : 0;\r\n                                    ad.direction = !dir;\r\n                                }\r\n                                else {\r\n                                    ad.nowTime = 0;\r\n                                }\r\n                            }\r\n                        }\r\n\r\n                        _this[methodName](ad.nowTime === 0 ? 0 : ad.nowTime / duration);\r\n                        if (callback) callback.apply(_this);\r\n                    }\r\n                    else {\r\n                        while (true) {\r\n                            var dt = yield MSM.AwaitNextUpdate.getInstance();\r\n                            let dir = ad.direction;\r\n                            let nowTime = ad.nowTime;\r\n                            if (dir ? nowTime < duration : nowTime >= 0) {\r\n                                _this[methodName](nowTime === 0 ? 0 : nowTime / duration);\r\n                                ad.nowTime += dt * (dir ? 1 : -1);\r\n                            }\r\n                            else if (havereverse) {\r\n                                ad.nowTime = dir ? duration : 0;\r\n                                ad.direction = !dir;\r\n                            }\r\n                            else {\r\n                                ad.nowTime = 0;\r\n                            }\r\n                        }\r\n                    }\r\n                })(this));\r\n                ad.iterator = iter;\r\n                this['__actions'].push({ iter: iter, actionName: actionName });\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * 标志此函数调用时会清除掉所有Action\r\n     */\r\n    export function clearAllAction<T extends MSM.State>(target: T, methodName: string, descriptor: TypedPropertyDescriptor<any>) {\r\n        var source: Function = target[methodName];\r\n        target[methodName] = function () {\r\n            var actions: [] = this['__actions'];\r\n            actions.forEach(value => {\r\n                //删除片段\r\n                this.stopCoroutine(value['iter'])\r\n            });\r\n            source.apply(this, arguments);\r\n        }\r\n    }\r\n    /**\r\n     * 此函数不是装饰器函数\r\n     * 停止一个Action\r\n     * @param target 当前类\r\n     * @param ActionFunction Action函数\r\n     */\r\n    export function StopAction<T extends MSM.StateMachine>(target: T, ActionFunction: Function) {\r\n        var actionName = ActionFunction['__actionName']\r\n        if (actionName) {\r\n            var action = target['__actions'].find(value => value.actionName === actionName);\r\n            if (action) {\r\n                target.stopCoroutine(action.iter);\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n"]}