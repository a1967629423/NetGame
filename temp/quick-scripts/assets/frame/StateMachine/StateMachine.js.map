{"version":3,"sources":["StateMachine.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"..\\..\\..\\..\\..\\assets\\frame\\StateMachine","sourcesContent":["import ObjectPool, { IObpool } from \"../ObjectPool/ObjectPool\";\r\nimport ObjectFactory from \"../ObjectPool/ObjectFactory\";\r\nexport module MSM {\r\n    export class OperatorStruct<Q> implements IObpool {\r\n        recycle() {\r\n            OperatorStruct.OP.push(this);\r\n        }\r\n        unuse() {\r\n            this.canOperator = true;\r\n            this.operatorInformation = Object.create(null);\r\n        }\r\n        reuse() {\r\n        }\r\n        public canOperator: boolean = true;\r\n        public operatorValue: Q = null;\r\n        public operatorInformation: any = Object.create(null);\r\n        public static OP: ObjectPool<OperatorStruct<any>> = new ObjectPool<OperatorStruct<any>>(false);\r\n        public static getinstance<T>(value?: T): OperatorStruct<T> {\r\n            var os: OperatorStruct<T> = this.OP.pop();\r\n            if (!os) {\r\n                os = new OperatorStruct(value);\r\n            }\r\n            os.operatorValue = value;\r\n            return os;\r\n        }\r\n        constructor(value?: Q) {\r\n            this.operatorValue = value;\r\n            //if(!OperatorStruct.cachesOperator)OperatorStruct.cachesOperator = this;\r\n        }\r\n        destroy() {\r\n            OperatorStruct.OP.push(this);\r\n        }\r\n    }\r\n    export class State {\r\n        stateName: string = ''\r\n        quitEvent: Function = null;\r\n        context: StateMachine = null;\r\n        _isAttach: boolean = false;\r\n        constructor(cxt: StateMachine) {\r\n            this.context = cxt;\r\n        }\r\n        OnLoad()\r\n        {\r\n            \r\n        }\r\n        Start() {\r\n\r\n        }\r\n        update(dt: number, op: OperatorStruct<any>) {\r\n\r\n        }\r\n        disable() {\r\n\r\n        }\r\n        Quit() {\r\n            if (this.quitEvent) this.quitEvent(this);\r\n        }\r\n        /**\r\n         * 如果此状态为附加状态则此状态退出\r\n         */\r\n        done() {\r\n            if (this._isAttach) this.context.attachQuit(this);\r\n            this.context.emit(\"done\");\r\n        }\r\n    }\r\n    export class AwaitNext implements IObpool {\r\n        unuse() {\r\n\r\n        }\r\n        reuse() {\r\n        }\r\n        recycle() {\r\n            if(this._factor)\r\n            {\r\n                this._factor.push(this);\r\n            }\r\n        }\r\n        protected _factor:ObjectFactory<AwaitNext> = null;\r\n        count: number = 1;\r\n        type: number = 1;\r\n        static OF:ObjectFactory<AwaitNext> = null;\r\n        static getInstance():AwaitNext\r\n        {\r\n            if(!this.OF)\r\n            {\r\n                this.OF = new ObjectFactory(true,AwaitNext);\r\n            }\r\n            let re =this.OF.pop();\r\n            re._factor = this.OF;\r\n            return re;\r\n        }\r\n    }\r\n    export class AwaitNextUpdate extends AwaitNext {\r\n        constructor(count: number = 1) {\r\n            super();\r\n            this.type = 1;\r\n            this.count = count;\r\n        }\r\n        static OF:ObjectFactory<AwaitNextUpdate> = null;\r\n        static getInstance(count:number=1):AwaitNextUpdate\r\n        {\r\n            if(!this.OF)\r\n            {\r\n                this.OF = new ObjectFactory(true,AwaitNextUpdate);\r\n            }\r\n            let re = this.OF.pop();\r\n            re._factor = this.OF;\r\n            re.count = count;\r\n            return re;\r\n        }\r\n    }\r\n    export class AwaitNextSecond extends AwaitNext {\r\n        time: number;\r\n        constructor(sec: number) {\r\n            super()\r\n            this.type = 2;\r\n            this.time = sec;\r\n        }\r\n        static OF:ObjectFactory<AwaitNextSecond> = null;\r\n        static getInstance(sec:number=1):AwaitNextSecond\r\n        {\r\n            if(!this.OF)\r\n            {\r\n                this.OF = new ObjectFactory(true,AwaitNextSecond,1);\r\n            }\r\n            let re = this.OF.pop();\r\n            re._factor = this.OF;\r\n            re.time = sec;\r\n            return re;\r\n        }\r\n    }\r\n    class DCoroutine {\r\n        time: number = 0;\r\n        count: number = 0;\r\n        type: number = 0;\r\n        NIter: Iterator<AwaitNext>;\r\n        timmer: number = 0;\r\n        countor: number = 0;\r\n        callback: (dc: DCoroutine) => void;\r\n        constructor(Iter: Iterator<AwaitNext>, callback?: (dc: DCoroutine) => void) {\r\n            this.NIter = Iter;\r\n            this.setAttr(0);\r\n            this.callback = callback;\r\n        }\r\n        setAttr(dt: number) {\r\n            var result = this.NIter.next(dt);\r\n            if (!result.done) {\r\n                this.setValue(result.value ? result.value : AwaitNextUpdate.getInstance());\r\n            }\r\n            else {\r\n                if (this.callback)this.callback(this);\r\n                \r\n            }\r\n        }\r\n        setValue(value: AwaitNext) {\r\n            this.type = value.type;\r\n            switch (this.type) {\r\n                case 1:\r\n                    this.count = (<AwaitNextUpdate>value).count;\r\n                    break;\r\n                case 2:\r\n                    this.time = (<AwaitNextSecond>value).time;\r\n                    break;\r\n                default:\r\n                    break;\r\n            }\r\n            value.recycle();\r\n        }\r\n        Update(dt: number) {\r\n            switch (this.type) {\r\n                case 1:\r\n                    this.countor++;\r\n                    if (this.countor >= this.count) {\r\n                        this.countor == 0;\r\n                        this.setAttr(dt);\r\n                    }\r\n                    break;\r\n                case 2:\r\n                    if (this.timmer < this.time) {\r\n                        this.timmer += dt;\r\n                    }\r\n                    else {\r\n                        this.timmer = 0;\r\n                        this.setAttr(dt);\r\n                    }\r\n                    break;\r\n            }\r\n        }\r\n    }\r\n    const { ccclass, property } = cc._decorator;\r\n    @ccclass\r\n    export class StateMachine extends cc.Component implements IObpool {\r\n        unuse(value?) {\r\n            //回收时清理当前状态\r\n            this.nowState = null;\r\n        }\r\n        reuse(value?) {\r\n            //启动状态\r\n            this.emit('start');\r\n        }\r\n        recycle(value?) {\r\n\r\n        }\r\n        nowState: State = null\r\n        attachment: { ch: State[], construct: { prototype: State } }[] = [];\r\n        sqs: State[] = [];\r\n        stateIns: { Ins: State, Name: string }[] = [];\r\n        strelation: SR[];\r\n        LSMDB: SM;\r\n        Coroutines: DCoroutine[] = [];\r\n        protected listenlist: { eventName: string, callback: (eventName: string) => void }[] = [];\r\n        changeState(cs: State) {\r\n            if (this.nowState) this.nowState.Quit();\r\n            this.nowState = cs;\r\n            cs.Start();\r\n        }\r\n        /**\r\n         * 初始化状态池，并且进入默认状态\r\n         */\r\n        Init()\r\n        {\r\n            if(this.stateIns.length==0)\r\n            {\r\n                this.LSMDB.sts.forEach(value => {\r\n                    var st: State = new value.st(this)\r\n                    this.LSMDB.stateRelation.forEach(v=>{\r\n                        if(typeof v.target==='string'&&v.target===value.name)\r\n                        {\r\n                            v.target = value.st;\r\n                        }\r\n                    });\r\n                    st.OnLoad();\r\n                    this.stateIns.push({ Ins: st, Name: value.name });\r\n                })\r\n            }\r\n            this.emit('start')\r\n        }\r\n        onLoad() {\r\n            \r\n        }\r\n        start()\r\n        {\r\n            this.Init();\r\n        }\r\n        startCoroutine(iter: DCoroutine) {\r\n            iter.callback = value => {\r\n                var idx = this.Coroutines.findIndex(cor => { return cor === value })\r\n                if(idx>-1)\r\n                this.Coroutines.splice(idx, 1);\r\n            }\r\n            this.Coroutines.push(iter);\r\n            return iter;\r\n        }\r\n        startCoroutine_Auto(iter: Iterator<AwaitNext>) {\r\n            return this.startCoroutine(new DCoroutine(iter));\r\n        }\r\n        stopCoroutine(iter:DCoroutine)\r\n        {\r\n            var idx = this.Coroutines.findIndex(value=>value ===iter);\r\n            if(idx>-1)\r\n            {\r\n                var oldCor = this.Coroutines[idx];\r\n                this.Coroutines.splice(idx);\r\n                //TODO:池化操作\r\n            }\r\n        }\r\n        AwaitUntil(target:()=>boolean):Promise<any>\r\n        {\r\n            return new Promise((resolve,reject)=>{\r\n                this.startCoroutine_Auto((function*(){\r\n                    while(!target())\r\n                    {\r\n                        yield AwaitNext.getInstance();\r\n                    }\r\n                    resolve();\r\n                })())\r\n            })\r\n        }\r\n        update(dt: number) {\r\n            if (this.Coroutines.length != 0) {\r\n                for (var i = this.Coroutines.length - 1; i >= 0; i--) {\r\n                    this.Coroutines[i].Update(dt);\r\n                }\r\n            }\r\n            var op = OperatorStruct.getinstance();\r\n            if (this.nowState) this.nowState.update(dt, op);\r\n        }\r\n        attachState<T extends State>(type: {new(ctx:StateMachine):State}): T {\r\n            //创建实例\r\n            var cs: T = type.apply({ __proto__: type.prototype }, [this])\r\n            cs.quitEvent = this.attachQuit.bind(this);\r\n            var fch = this.attachment.find((value) => {\r\n                if (value.construct === type) return true;\r\n            });\r\n            if (fch) {\r\n                fch.ch.push(cs);\r\n            }\r\n            else {\r\n                this.attachment.push({ ch: new Array(cs), construct: type });\r\n            }\r\n            this.sqs.push(cs);\r\n            cs._isAttach = true;\r\n            setTimeout(() => {\r\n                cs.Start();\r\n            })\r\n            return cs;\r\n        }\r\n        attachQuit(CS: State) {\r\n            let typestr = typeof CS;\r\n            var chindex = 0;\r\n            let index = this.attachment.findIndex((value) => {\r\n                if (value.ch.find((v2, index: number) => {\r\n                    if (v2 === CS) {\r\n                        chindex = index;\r\n                        return true;\r\n                    }\r\n                })) return true;\r\n            });\r\n            var index2 = this.sqs.findIndex((value: State) => {\r\n                if (value === CS) return true;\r\n            });\r\n            if(index>-1)\r\n            this.attachment[index].ch.splice(chindex, 1);\r\n            if(index2>-1)\r\n            this.sqs.splice(index2, 1);\r\n            if (this.attachment[index].ch.length < 1) delete this.attachment[typestr];\r\n        }\r\n        getAttachs<T extends State>(type: { prototype: T, apply: Function }): T[] {\r\n            for (let val in this.attachment) {\r\n                if (this.attachment[val].construct === type) return <T[]>this.attachment[val].ch;\r\n            }\r\n            return null;\r\n        }\r\n        getAttach<T extends State>(type: { prototype: T, apply: Function }): T {\r\n            let ats = this.getAttachs(type);\r\n            return <T>(ats ? ats[0] : ats);\r\n        }\r\n\r\n\r\n        forEachAttach(functionName: string, os: OperatorStruct<any>, ...arg) {\r\n            if (this.sqs.length > 0) {\r\n                for (var i = this.sqs.length - 1; i >= 0; i--) {\r\n                    arg.push(os);\r\n                    this.sqs[i][functionName].apply(this.sqs[i], arg);\r\n                }\r\n            }\r\n        }\r\n        /**\r\n         * 修改一个附加状态的执行顺序\r\n         */\r\n        changAttachStateOrder(cs: State, order: number) {\r\n            var idx = this.sqs.findIndex((value) => { if (value === cs) return true });\r\n            if(idx>-1)\r\n            {\r\n                var newArr = this.sqs.splice(idx, 1);\r\n                newArr.splice(order, 0, this.sqs[idx]);\r\n                this.sqs = newArr;\r\n            }\r\n        }\r\n        getStatesLength(): number {\r\n            return this.sqs.length;\r\n        }\r\n        /**\r\n         * 引发一个事件\r\n         * @param eventName 事件名\r\n         */\r\n        emit(eventName: string) {\r\n            var st = this.strelation.find(value => {\r\n                if(value.type===1)\r\n                {\r\n                    return value.eventname == eventName && (value.source == this.nowState['constructor']||!value.source);\r\n                }\r\n                else\r\n                {\r\n                    return value.eventname===eventName;\r\n                }\r\n            })\r\n            if (st) {\r\n                var tarIns = this.stateIns.find(value => { return value.Ins['constructor'] === st.target })\r\n                if(tarIns&&(st.type===1||st.type===2))\r\n                {\r\n                    this.changeState(tarIns.Ins)\r\n                }\r\n                else if(st.target&&typeof st.target !=='string')\r\n                {\r\n                    if(st.type&8)\r\n                    {\r\n                        if(!this.sqs.find(v=>v['constructor']===st.target))\r\n                        {\r\n                            this.attachState(st.target);\r\n                        }\r\n                    }\r\n                    else\r\n                    {\r\n                        this.attachState(st.target);\r\n                    }\r\n                    \r\n                }\r\n            }\r\n            this.node.emit(eventName);\r\n        }\r\n        private listenToemit(eventName: string) {\r\n            this.emit(eventName);\r\n        }\r\n        listen(eventName: string) {\r\n            if (!this.listenlist.find(value => value.eventName === eventName)) {\r\n                var callback = (function (eventName) {\r\n                    return () => {\r\n                        this.listenToemit(eventName)\r\n                    }\r\n                })(eventName)\r\n                this.listenlist.push({ eventName: eventName, callback: callback })\r\n                this.node.on(eventName, callback, this);\r\n            }\r\n        }\r\n        cancelListen(eventName: string) {\r\n            var list = this.listenlist.find(vlaue => vlaue.eventName === eventName)\r\n            if (list) {\r\n                this.node.off(list.eventName, list.callback, this)\r\n            }\r\n        }\r\n        onDestroy() {\r\n            if(this.nowState)\r\n            this.nowState.Quit();\r\n            this.sqs.forEach(value => {if(value)value.Quit() });\r\n        }\r\n        onDisable() {\r\n            if(this.nowState)\r\n            this.nowState.disable();\r\n            this.sqs.forEach(value => { if(value)value.disable() });\r\n        }\r\n\r\n    }\r\n\r\n    export class StateMachine_base  {\r\n        nowState: State = null\r\n        attachment: { ch: State[], construct: { prototype: State } }[] = [];\r\n        sqs: State[] = [];\r\n        stateIns: { Ins: State, Name: string }[] = [];\r\n        strelation: SR[];\r\n        LSMDB: SM;\r\n        Coroutines: DCoroutine[] = [];\r\n        protected listenlist: { eventName: string, callback: (eventName: string) => void }[] = [];\r\n        changeState(cs: State) {\r\n            if (this.nowState) this.nowState.Quit();\r\n            this.nowState = cs;\r\n            cs.Start();\r\n        }\r\n        start() {\r\n            this.LSMDB.sts.forEach(value => {\r\n                var st: State = new value.st(this)\r\n                st.OnLoad();\r\n                this.stateIns.push({ Ins: st, Name: value.name })\r\n            })\r\n            this.emit('start')\r\n        }\r\n        startCoroutine(iter: DCoroutine) {\r\n            iter.callback = value => {\r\n                this.Coroutines.splice(this.Coroutines.findIndex(cor => { return cor === value }), 1);\r\n            }\r\n            this.Coroutines.push(iter);\r\n            return iter;\r\n        }\r\n        startCoroutine_Auto(iter: Iterator<AwaitNext>) {\r\n            //TODO:池化\r\n            return this.startCoroutine(new DCoroutine(iter));\r\n        }\r\n        stopCoroutine(iter:DCoroutine)\r\n        {\r\n            var idx = this.Coroutines.findIndex(value=>value ===iter);\r\n            if(idx>-1)\r\n            {\r\n                var oldCor = this.Coroutines[idx];\r\n                this.Coroutines.splice(idx);\r\n                //TODO:池化操作\r\n            }\r\n        }\r\n        update(dt: number) {\r\n            if (this.Coroutines.length != 0) {\r\n                for (var i = this.Coroutines.length - 1; i >= 0; i--) {\r\n                    this.Coroutines[i].Update(dt);\r\n                }\r\n            }\r\n            var op = OperatorStruct.getinstance();\r\n            if (this.nowState) this.nowState.update(dt, op);\r\n        }\r\n        attachState<T extends State>(type: { prototype: T, apply: Function }): T {\r\n            //创建实例\r\n            var cs: T = type.apply({ __proto__: type.prototype }, [this])\r\n            cs.quitEvent = this.attachQuit.bind(this);\r\n            var fch = this.attachment.find((value) => {\r\n                if (value.construct === type) return true;\r\n            });\r\n            if (fch) {\r\n                fch.ch.push(cs);\r\n            }\r\n            else {\r\n                this.attachment.push({ ch: new Array(cs), construct: type });\r\n            }\r\n            this.sqs.push(cs);\r\n            cs._isAttach = true;\r\n            setTimeout(() => {\r\n                cs.Start();\r\n            })\r\n            return cs;\r\n        }\r\n        attachQuit(CS: State) {\r\n            let typestr = typeof CS;\r\n            var chindex = 0;\r\n            let index = this.attachment.findIndex((value) => {\r\n                if (value.ch.find((v2, index: number) => {\r\n                    if (v2 === CS) {\r\n                        chindex = index;\r\n                        return true;\r\n                    }\r\n                })) return true;\r\n            });\r\n            let index2 = this.sqs.findIndex((value: State) => {\r\n                if (value === CS) return true;\r\n            });\r\n            this.attachment[index].ch.splice(chindex, 1);\r\n            this.sqs.splice(index2, 1);\r\n            if (this.attachment[index].ch.length < 1) delete this.attachment[typestr];\r\n        }\r\n        getAttachs<T extends State>(type: { prototype: T, apply: Function }): T[] {\r\n            for (let val in this.attachment) {\r\n                if (this.attachment[val].construct === type) return <T[]>this.attachment[val].ch;\r\n            }\r\n            return null;\r\n        }\r\n        getAttach<T extends State>(type: { prototype: T, apply: Function }): T {\r\n            let ats = this.getAttachs(type);\r\n            return <T>(ats ? ats[0] : ats);\r\n        }\r\n\r\n\r\n        forEachAttach(functionName: string, os: OperatorStruct<any>, ...arg) {\r\n            if (this.sqs.length > 0) {\r\n                for (var i = this.sqs.length - 1; i >= 0; i--) {\r\n                    arg.push(os);\r\n                    this.sqs[i][functionName].apply(this.sqs[i], arg);\r\n                }\r\n            }\r\n        }\r\n        /**\r\n         * 修改一个附加状态的执行顺序\r\n         */\r\n        changAttachStateOrder(cs: State, order: number) {\r\n            var idx = this.sqs.findIndex((value) => { if (value === cs) return true });\r\n            if(idx>-1)\r\n            {\r\n                var newArr = this.sqs.splice(idx, 1);\r\n                newArr.splice(order, 0, this.sqs[idx]);\r\n                this.sqs = newArr;\r\n            }\r\n        }\r\n        getStatesLength(): number {\r\n            return this.sqs.length;\r\n        }\r\n        /**\r\n         * 引发一个事件\r\n         * @param eventName 事件名\r\n         */\r\n        emit(eventName: string) {\r\n            var st = this.strelation.find(value => {\r\n                if (!this.nowState) {\r\n                    return value.eventname == eventName\r\n                }\r\n                else {\r\n                    return value.eventname == eventName && (value.source == this.nowState['constructor']||!value.source)\r\n                }\r\n            })\r\n            if (st) {\r\n                var tarIns = this.stateIns.find(value => { return value.Ins['constructor'] === st.target })\r\n                if (tarIns) {\r\n                    this.changeState(tarIns.Ins)\r\n                }\r\n            }\r\n\r\n        }\r\n        private listenToemit(eventName: string) {\r\n            this.emit(eventName);\r\n        }\r\n        listen(eventName: string) {\r\n            // if (!this.listenlist.find(value => value.eventName === eventName)) {\r\n            //     var callback = (function (eventName) {\r\n            //         return () => {\r\n            //             this.listenToemit(eventName)\r\n            //         }\r\n            //     })(eventName)\r\n            //     this.listenlist.push({ eventName: eventName, callback: callback })\r\n            //     this.node.on(eventName, callback, this);\r\n            // }\r\n        }\r\n        cancelListen(eventName: string) {\r\n            // var list = this.listenlist.find(vlaue => vlaue.eventName === eventName)\r\n            // if (list) {\r\n            //     this.node.off(list.eventName, list.callback, this)\r\n            // }\r\n        }\r\n        onDestroy() {\r\n            this.nowState.Quit();\r\n            this.sqs.forEach(value => { value.Quit() });\r\n        }\r\n        onDisable() {\r\n            this.nowState.disable();\r\n            this.sqs.forEach(value => { value.disable() });\r\n        }\r\n        disable()\r\n        {\r\n            this.onDisable();\r\n        }\r\n        destroy()\r\n        {\r\n            this.onDestroy();\r\n        }\r\n\r\n    }\r\n}\r\n\r\n"]}