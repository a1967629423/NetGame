{"version":3,"sources":["TimeManageStates.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"..\\..\\..\\..\\..\\..\\assets\\script\\manage\\states","sourcesContent":["import { TimeMSM } from \"../TimeManage\";\r\nimport { MSMDsc } from \"../../../frame/StateMachine/StateDec\";\r\nimport { MSM } from \"../../../frame/StateMachine/StateMachine\";\r\nimport { SiteSM } from \"../../site/SiteMachine\";\r\nimport GameObjectManage from \"../GameObjectManange\";\r\nimport { SiteType } from \"../../Enums\";\r\nconst { mState, mDefaultState, mLinkTo } = MSMDsc\r\nexport module TimeManageStates {\r\n    \r\n    @mLinkTo('Pause', 'pause')\r\n    @mDefaultState\r\n    @mState('Default', TimeMSM.TimeManage)\r\n    export class Default extends TimeMSM.TimeManageState {\r\n        async generateSite() {\r\n            //生成站点\r\n            /** \r\n             * 1.范围不能太大，当前设置为(-1000,-1000,1000,1000)这样的矩形面积里面\r\n             * 2.不能与其他站点重合 使用站点的静态缓存比对\r\n            */\r\n            var containFlag = true;\r\n            while (containFlag) {\r\n                containFlag = false\r\n                var gx = Math.random() * 2000 - 1000;\r\n                var gy = Math.random() * 2000 - 1000;\r\n                var dw = 300;\r\n                var dh = 300;\r\n                var generateRect = cc.rect(gx, gy, dw, dh);\r\n                var mrect = cc.rect()\r\n                var machines = SiteSM.SiteMachine.SiteMachines;\r\n                for (var i in machines) {\r\n                    mrect.x = machines[i].node.x;\r\n                    mrect.y = machines[i].node.y;\r\n                    mrect.height = machines[i].node.height;\r\n                    mrect.width = machines[i].node.width;\r\n                    if (mrect.containsRect(generateRect)) {\r\n                        containFlag = true;\r\n                        break;\r\n                    }\r\n                }\r\n                if(!containFlag)\r\n                {\r\n                    var keys = Object.keys(SiteType);\r\n                    var typelen = keys.length\r\n                    var sittype = Math.floor(Math.random()*typelen)\r\n                    console.log(sittype)\r\n                    var site = await GameObjectManage.Instance.getSite(sittype)\r\n                    if(site)\r\n                    {\r\n                        site.node.setParent(this.context.SiteNode);\r\n                        site.node.x =gx;\r\n                        site.node.y = gy;\r\n                    }\r\n                }\r\n            }\r\n\r\n        }\r\n        Start() {\r\n            var steptime = this.context.steptime\r\n            var node = this.context.node\r\n            var context = this.context\r\n            this.context.startCoroutine_Auto((function* () {\r\n                while (true) {\r\n                    node.emit('timeUpdate', context.nowTime)\r\n                    yield new MSM.AwaitNextSecond(steptime)\r\n                }\r\n            })());\r\n            this.context.startCoroutine_Auto((function* () {\r\n                while (true) {\r\n                    var dt = yield new MSM.AwaitNextUpdate();\r\n                    if (context.nowTime < context.oneDayTime) {\r\n                        context.nowTime += dt;\r\n                    }\r\n                    else {\r\n                        context.nowTime = 0;\r\n                    }\r\n                }\r\n            })());\r\n            this.context.startCoroutine_Auto((function* (_this) {\r\n                while (true) {\r\n                    yield new MSM.AwaitNextSecond(50)\r\n                    _this.generateSite();\r\n\r\n                }\r\n            })(this))\r\n        }\r\n\r\n        // update (dt) {}\r\n    }\r\n    \r\n    @mLinkTo('Default', 'resume')\r\n    @mState('Pause', TimeMSM.TimeManage)\r\n    export class Pause extends TimeMSM.TimeManageState {\r\n\r\n    }\r\n}\r\n\r\n"]}