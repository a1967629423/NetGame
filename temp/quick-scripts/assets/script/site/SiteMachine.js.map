{"version":3,"sources":["SiteMachine.ts"],"names":[],"mappings":";;;;;AAAA,sEAA4D;AAC5D,8DAA2D;AAC3D,uDAAuD;AACvD,2CAAsC;AACtC,yEAAmE;AACnE,kCAAkD;AAClD,sEAAiE;AAS3D,IAAA,kBAAqC,EAAnC,oBAAO,EAAE,sBAAQ,CAAmB;AACpC,IAAA,mDAAe,EAAE,uCAAS,CAAW;AAC7C,IAAc,UAAU,CA0LvB;AA1LD,WAAc,UAAU;IACpB;QAAA;YAQI,aAAQ,GAAuB,IAAI,CAAA;YACnC,aAAQ,GAA+B,IAAI,CAAA;YAC3C,YAAO,GAAuB,IAAI,CAAA;YAClC,aAAQ,GAA+B,IAAI,CAAA;YAC3C,aAAQ,GAAuB,IAAI,CAAA;YACnC,cAAS,GAAW,CAAC,CAAC;YACtB,eAAU,GAAyD,EAAE,CAAC;YACtE,iBAAY,GAAyD,EAAE,CAAC;YACxE,SAAI,GAAY,IAAI,CAAA;YAEpB,cAAS,GAAiB,oBAAY,CAAC,GAAG,CAAC;QAsK/C,CAAC;QAvLG,iCAAO,GAAP;YACI,eAAe,CAAC,EAAE,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QAClC,CAAC;QACD,+BAAK,GAAL;QACA,CAAC;QACD,+BAAK,GAAL;QACA,CAAC;QAYD,sBAAI,qCAAQ;iBAAZ;gBACI,OAAO,IAAI,CAAC,SAAS,CAAC;YAC1B,CAAC;iBACD,UAAa,GAAG;gBACZ,IAAI,CAAC,SAAS,GAAG,GAAG,CAAC;YACzB,CAAC;;;WAHA;QAMK,gCAAM,GAAZ;;;;;;SAQC;QACM,4BAAY,GAAnB,UAAoB,CAAoB,EAAC,CAAoB,EAAC,IAAoB;YAE1E,IAAA,iEAAkI,EAAhI,QAAC,EAAE,QAAC,EAAE,wBAAS,EAAE,4BAAW,EAAE,0BAAU,EAAE,oBAAO,EAAE,gBAAK,EAAE,gBAAK,CAAiE;YACtI,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC;YAC3B,IAAI,CAAC,UAAU,GAAG,EAAE,CAAA;YACpB,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,EAAE,MAAM,EAAE,OAAO,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,KAAK,EAAE,KAAK,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,MAAM,EAAE,WAAW,EAAE,CAAC,CAAA;YAClG,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,EAAE,MAAM,EAAE,SAAS,EAAE,KAAK,EAAE,CAAC,CAAC,IAAI,CAAC,QAAQ,EAAE,MAAM,EAAE,UAAU,EAAE,CAAC,CAAC;QAC5F,CAAC;QACY,qBAAK,GAAlB,UAAmB,CAAqB,EAAE,CAAqB,EAAE,CAAqB,EAAE,CAAe,EAAE,IAAa;2CAAE,OAAO;;;oBACvH,SAAS,GAAG,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,UAAA,KAAK,IAAI,OAAA,KAAK,CAAC,GAAG,KAAK,CAAC,EAAf,CAAe,CAAC,CAAA;oBAE5D,IAAI,CAAC,EAAE;wBACH,8DAA8D;wBAC9D,iEAAiE;wBACjE,qCAAqC;wBACrC,oBAAoB;wBACpB,qDAAqD;wBAErD,IAAI;wBACJ,uEAAuE;wBACvE,qCAAqC;wBACrC,mCAAmC;wBACnC,QAAQ;wBACR,aAAa;wBACb,sBAAsB;wBACtB,QAAQ;wBACR,IAAI;wBACJ,SAAS;wBACT,4BAA4B;wBAC5B,QAAQ;wBACR,uCAAuC;wBACvC,uCAAuC;wBACvC,iCAAiC;wBACjC,mFAAmF;wBACnF,sCAAsC;wBACtC,iCAAiC;wBACjC,mCAAmC;wBACnC,oGAAoG;wBACpG,uCAAuC;wBACvC,mCAAmC;wBACnC,iCAAiC;wBACjC,sCAAsC;wBACtC,sCAAsC;wBACtC,mCAAmC;wBACnC,mCAAmC;wBACnC,sCAAsC;wBACtC,gEAAgE;wBAChE,gEAAgE;wBAChE,8BAA8B;wBAC9B,kDAAkD;wBAClD,gDAAgD;wBAChD,uBAAuB;wBACvB,8BAA8B;wBAC9B,QAAQ;wBACR,kBAAkB;wBAClB,IAAI;wBAEJ,eAAe;wBACf,2BAA2B;wBAC3B,8BAA8B;wBAC9B,IAAI;wBACJ,SAAS;wBACT,4IAA4I;wBAC5I,iCAAiC;wBACjC,0BAA0B;wBAC1B,wGAAwG;wBACxG,8FAA8F;wBAC9F,+BAA+B;wBAC/B,6DAA6D;wBAC7D,oBAAoB;wBACpB,qBAAqB;wBACrB,yEAAyE;wBACzE,wCAAwC;wBACxC,IAAI;wBACJ,mCAAmC;wBACnC,IAAI;wBACJ,oBAAoB;wBAEpB,YAAY;wBACZ,IAAI;wBACJ,4BAA4B;wBAC5B,8BAA8B;wBAC9B,IAAI;wBACJ,OAAO;wBACP,IAAI;wBACJ,sBAAsB;wBACtB,4BAA4B;wBAC5B,yBAAyB;wBACzB,oEAAoE;wBACpE,IAAI;wBAEJ,qBAAqB;wBACrB,wBAAwB;wBACxB,oBAAoB;wBACpB,sBAAsB;wBACtB,oCAAoC;wBACpC,qCAAqC;wBACrC,wBAAwB;wBAExB,cAAc;qBACjB;;wBAEG,sBAAO,IAAI,EAAC;;;;SACnB;QACD,iCAAO,GAAP,UAAQ,OAAuB;YAA/B,iBAQC;YANG,IAAI,CAAC,QAAQ,GAAG,OAAO,CAAC;YACxB,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC,QAAQ,EAAC;gBAClB,KAAI,CAAC,QAAQ,GAAC,IAAI,CAAC;gBACnB,KAAI,CAAC,QAAQ,GAAC,IAAI,CAAC;gBACnB,uBAAY,CAAC,QAAQ,CAAC,KAAI,CAAC,IAAI,CAAC,CAAC;YACrC,CAAC,CAAC,CAAA;QACN,CAAC;QACD,sBAAI,kCAAK;iBAAT;gBACI,OAAO,CAAC,IAAI,CAAC,QAAQ,CAAA;YACzB,CAAC;;;WAAA;QACD,sBAAI,oCAAO;iBAAX;gBACI,OAAO,CAAC,IAAI,CAAC,QAAQ,CAAA;YACzB,CAAC;;;WAAA;QACD,qCAAW,GAAX,UAAY,QAAgB,EAAE,GAAmB;YAAnB,oBAAA,EAAA,UAAmB;YAC7C,IAAI,KAAK,GAAG,GAAG,CAAA,CAAC,CAAA,IAAI,CAAA,CAAC,CAAA,IAAI,CAAC,QAAQ,CAAC;YACnC,IAAI,IAAI,GAAG,KAAK,CAAC,UAAU,CAAA,CAAA,uCAAuC;YAClE,IAAI,SAAS,GAAG,GAAG,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,KAAK,CAAC,SAAS,GAAG,QAAQ,CAAC;YAC5D,IAAI,GAAG,GAAG,IAAI,CAAC,SAAS,CAAC,UAAA,KAAK,IAAI,OAAA,KAAK,CAAC,MAAM,IAAI,SAAS,EAAzB,CAAyB,CAAC,CAAA;YAC5D,IAAI,EAAE,GAAG,IAAI,CAAC,GAAG,CAAC,CAAA;YAClB,IAAI,KAAK,GAAG,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,QAAQ,CAAC;YACxC,IAAI,OAAO,GAAG,EAAE,CAAC,MAAM,CAAC;YACxB,IAAI,GAAG,IAAI,CAAC,EAAE;gBACV,KAAK,GAAG,IAAI,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,KAAK,CAAC;gBAC5B,SAAS,IAAI,IAAI,CAAC,GAAG,GAAC,CAAC,CAAC,CAAC,MAAM,CAAA;gBAC/B,OAAO,IAAI,IAAI,CAAC,GAAG,GAAC,CAAC,CAAC,CAAC,MAAM,CAAA;aAChC;YACD,IAAI,EAAE,GAAG,KAAK,CAAC,IAAI,CAAC,EAAE,CAAC,KAAK,EAAE,SAAS,GAAE,OAAO,CAAC,CAAA,CAAC,sDAAsD;YACxG,OAAO,EAAE,QAAQ,EAAE,EAAE,EAAE,MAAM,EAAE,EAAE,CAAC,MAAM,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE,CAAC;YACjE,0KAA0K;QAC9K,CAAC;QACD,mCAAS,GAAT,UAAU,IAAY,EAAE,MAAmC,EAAE,GAAY;YACrE,IAAG,MAAM,CAAC,mBAAmB,CAAC,OAAO,IAAE,IAAI,CAAC,OAAO,CAAC,QAAQ,KAAG,IAAI,EACnE;gBACI,MAAM,CAAC,aAAa,GAAG,IAAI,CAAC;gBAC5B,OAAO;aACV;iBAED;gBACI,MAAM,CAAC,mBAAmB,CAAC,OAAO,GAAG,IAAI,CAAC;aAC7C;YACD,GAAG,CAAC,CAAC,CAAA,IAAI,CAAC,QAAQ,CAAA,CAAC,CAAA,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,IAAI,EAAE,MAAM,EAAC,GAAG,CAAC,CAAA,CAAC,CAAA,IAAI,CAAC,CAAC,CAAA,IAAI,CAAC,QAAQ,CAAA,CAAC,CAAA,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,IAAI,EAAE,MAAM,EAAC,GAAG,CAAC,CAAA,CAAC,CAAA,IAAI,CAAC;QACpI,CAAC;QAtKM,wBAAQ,GAAyD,EAAE,CAAA;QAQnE,kBAAE,GAAmC,IAAI,uBAAa,CAAC,IAAI,EAAE,eAAe,CAAC,CAAA;QA+JxF,sBAAC;KAxLD,AAwLC,IAAA;IAxLY,0BAAe,kBAwL3B,CAAA;AACL,CAAC,EA1La,UAAU,GAAV,kBAAU,KAAV,kBAAU,QA0LvB;AAOD,IAAc,MAAM,CAgGnB;AAhGD,WAAc,MAAM;IAGhB;QAAiC,+BAAgB;QAFjD;YAAA,qEA+DC;YAhDG,gBAAU,GAAiB,EAAE,CAAA;YAC7B,eAAS,GAAuB,EAAE,CAAA;YAClC,QAAE,GAAiB,IAAI,CAAA;YAEvB,cAAQ,GAAa,gBAAQ,CAAC,IAAI,CAAA;;QA4CtC,CAAC;wBA7DY,WAAW;QAEpB,gCAAU,GAAV,UAAW,MAAsC;QAEjD,CAAC;QAED,mCAAa,GAAb,UAAc,MAAsC;QACpD,CAAC;QAED,+BAAS,GAAT,UAAU,IAAY,EAAE,MAAmC,EAAC,GAAW;QAEvE,CAAC;QAQD,2BAAK,GAAL,UAAM,UAAoB;QAE1B,CAAC;QAED,gCAAU,GAAV,UAAW,UAAoB;QAE/B,CAAC;QAED,8BAAQ,GAAR,UAAS,UAAoB;QAE7B,CAAC;QAED,iCAAW,GAAX,UAAY,UAAoB;QAEhC,CAAC;QAED,4BAAM,GAAN;YAEI,kBAAI,CAAC,WAAW,CAAC,WAAW,CAAC,IAAI,EAAC,IAAI,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;QAC3D,CAAC;QACD,2BAAK,GAAL;YACI,iBAAM,KAAK,WAAE,CAAC;YACd,aAAW,CAAC,YAAY,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;YACpC,IAAI,CAAC,EAAE,GAAG,uBAAY,CAAC,QAAQ,CAAA;QACnC,CAAC;QACD,+BAAS,GAAT;YAAA,iBAIC;YAHG,IAAI,GAAG,GAAG,aAAW,CAAC,YAAY,CAAC,SAAS,CAAC,UAAA,KAAK,IAAI,OAAA,KAAK,KAAK,KAAI,EAAd,CAAc,CAAC,CAAA;YACrE,IAAG,GAAG,GAAC,CAAC,CAAC;gBACT,aAAW,CAAC,YAAY,CAAC,MAAM,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC;QAC5C,CAAC;QACD,gCAAU,GAAV,UAAW,IAAqB;YAE5B,IAAI,GAAG,GAAG,IAAI,CAAC,SAAS,CAAC,SAAS,CAAC,UAAA,KAAK,IAAE,OAAA,KAAK,KAAG,IAAI,EAAZ,CAAY,CAAC,CAAC;YACxD,IAAG,GAAG,GAAC,CAAC,CAAC;gBACT,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,GAAG,EAAC,CAAC,CAAC,CAAC;QACjC,CAAC;QACD,6BAAO,GAAP,UAAQ,IAAqB;YAEzB,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QAC9B,CAAC;;QAxBM,wBAAY,GAAkB,EAAE,CAAA;QAhCvC;YADC,SAAS;qDAGT;QAED;YADC,SAAS;wDAET;QAED;YADC,SAAS;oDAGT;QAED;YADC,QAAQ,CAAC,CAAC,oBAAU,CAAC,CAAC;uDACM;QAI7B;YADC,QAAQ,CAAC,EAAC,IAAI,EAAC,EAAE,CAAC,IAAI,CAAC,gBAAQ,CAAC,EAAC,CAAC;qDACD;QAElC;YADC,SAAS;gDAGT;QAED;YADC,SAAS;qDAGT;QAED;YADC,SAAS;mDAGT;QAED;YADC,SAAS;sDAGT;QAjCQ,WAAW;YAFvB,iBAAM,CAAC,aAAa;YACpB,OAAO;WACK,WAAW,CA6DvB;QAAD,kBAAC;KA7DD,AA6DC,CA7DgC,kBAAG,CAAC,YAAY,GA6DhD;IA7DY,kBAAW,cA6DvB,CAAA;IACD;QAA+B,6BAAS;QAAxC;;QA8BA,CAAC;QA7BG,8BAAU,GAAV,UAAW,MAAsC;QACjD,CAAC;QACD,iCAAa,GAAb,UAAc,MAAsC;QACpD,CAAC;QACD,6BAAS,GAAT,UAAU,IAAY,EAAE,MAAmC,EAAC,GAAW;QAEvE,CAAC;QACD,yBAAK,GAAL,UAAM,UAAoB;QAE1B,CAAC;QACD,8BAAU,GAAV,UAAW,UAAoB;QAE/B,CAAC;QACD,4BAAQ,GAAR,UAAS,UAAoB;QAE7B,CAAC;QACD,+BAAW,GAAX,UAAY,UAAoB;QAEhC,CAAC;QAWL,gBAAC;IAAD,CA9BA,AA8BC,CA9B8B,kBAAG,CAAC,KAAK,GA8BvC;IA9BY,gBAAS,YA8BrB,CAAA;AACL,CAAC,EAhGa,MAAM,GAAN,cAAM,KAAN,cAAM,QAgGnB","file":"","sourceRoot":"..\\..\\..\\..\\..\\assets\\script\\site","sourcesContent":["import { MSM } from \"../../frame/StateMachine/StateMachine\";\r\nimport { MSMDsc } from \"../../frame/StateMachine/StateDec\";\r\nimport { IInput, IPSM } from \"../../frame/InputManage\";\r\nimport SitePeople from \"./SitePeople\";\r\nimport PrefabFactor from \"../../frame/PrefabFactory/PrefabFactory\";\r\nimport { SiteType, SiteLineType } from \"../Enums\";\r\nimport ObjectFactory from \"../../frame/ObjectPool/ObjectFactory\";\r\nimport { IObpool } from \"../../frame/ObjectPool/ObjectPool\";\r\nimport GameObjectManage from \"../manage/GameObjectManange\";\r\nimport ScenesObject from \"../../utility/ScenesObject\";\r\nimport { SLDSM } from \"./SiteLine\";\r\nimport { Path } from \"../Path/PathSM\";\r\n\r\n\r\n\r\nconst { ccclass, property } = cc._decorator;\r\nconst { mSyncAttachFunc, mSyncFunc } = MSMDsc\r\nexport module SiteLineSM {\r\n    export class SiteLineMachine implements IObpool {\r\n        recycle() {\r\n            SiteLineMachine.OF.push(this);\r\n        }\r\n        unuse() {\r\n        }\r\n        reuse() {\r\n        }\r\n        LastSite: SiteSM.SiteMachine = null\r\n        LastLine: SiteLineSM.SiteLineMachine = null\r\n        NowSite: SiteSM.SiteMachine = null\r\n        NextLine: SiteLineSM.SiteLineMachine = null\r\n        NextSite: SiteSM.SiteMachine = null\r\n        allLength: number = 0;\r\n        changPoint: { length: number, point: cc.Vec2, Radian: number }[] = [];\r\n        rchangePoint: { length: number, point: cc.Vec2, Radian: number }[] = [];\r\n        node: cc.Node = null\r\n        static SiteInfo: { key: SiteLineType, value: SiteSM.SiteMachine[] }[] = []\r\n        _LineType: SiteLineType = SiteLineType.red;\r\n        get LineType(): SiteLineType {\r\n            return this._LineType;\r\n        }\r\n        set LineType(val) {\r\n            this._LineType = val;\r\n        }\r\n        static OF: ObjectFactory<SiteLineMachine> = new ObjectFactory(true, SiteLineMachine)\r\n        static check\r\n        async onLoad() {\r\n            // if (this.isBegin) {\r\n            //     var vechicle = await GameObjectManage.Instance.getVehicle(this.NowSite, 0.1, this)\r\n            //     if (vechicle) {\r\n            //         var vehicles = ScenesObject.instance.node.getChildByName('vehicles');\r\n            //         vehicles.addChild(vechicle.node);\r\n            //     }\r\n            // }\r\n        }\r\n        static caculatePath(n:SiteSM.SiteMachine,e:SiteSM.SiteMachine,Line:SiteLineMachine)\r\n        {\r\n            var { x, y, allLength, firstRadian, lastRadian, rectDir, rectH, rectW } = DMath.pathCalcaulate(n.node.x, n.node.y, e.node.x, e.node.y)\r\n            Line.allLength = allLength;\r\n            Line.changPoint = []\r\n            Line.changPoint.push({ length: rectDir ? rectW : rectH, point: cc.v2(x, y), Radian: firstRadian })\r\n            Line.changPoint.push({ length: allLength, point: e.node.position, Radian: lastRadian });\r\n        }\r\n        static async getLM(n: SiteSM.SiteMachine, b: SiteSM.SiteMachine, e: SiteSM.SiteMachine, t: SiteLineType, node: cc.Node):Promise<SiteLineMachine>  {\r\n            var directory = this.SiteInfo.find(value => value.key === t)\r\n\r\n            if (n) {\r\n                // var Line = n.SiteLines.find(value => value.LineType === t);\r\n                // var next = e?e.SiteLines.find(value=>value.LineType===t):null;\r\n                // if(Line===next&&CC_DEBUG)debugger;\r\n                // if (!directory) {\r\n                //     this.SiteInfo.push({ key: t, value: [n, e] });\r\n\r\n                // }\r\n                // else if (directory.value[directory.value.length - 1] === n&&!next) {\r\n                //     if (directory.value[0] != e) {\r\n                //         directory.value.push(e);\r\n                //     }\r\n                //     else {\r\n                //         return null\r\n                //     }\r\n                // }\r\n                // else {\r\n                //     if(Line&&!Line.isEnd)\r\n                //     {\r\n                //         // let next = Line.NextLine;\r\n                //         // let last = Line.LastLine;\r\n                //         // var oldLine = Line;\r\n                //         // directory.value.splice(directory.value.findIndex(value=>value===n),1)\r\n                //         // directory.value.push(e);\r\n                //         // n.removeLine(Line);\r\n                //         // if(CC_DEBUG)debugger;\r\n                //         // var SiteLine = await GameObjectManage.Instance.getLine(t,last.NowSite,e,next.NowSite);\r\n                //         // if(!SiteLine)return null;\r\n                //         // Line = SiteLine.line;\r\n                //         // // Line.NowSite =e;\r\n                //         // // Line.LastLine = last;\r\n                //         // // Line.NextLine = next;\r\n                //         // last.NextLine = Line;\r\n                //         // next.LastLine = Line;\r\n                //         // oldLine.NextLine = Line;\r\n                //         // this.caculatePath(last.NowSite,Line.NowSite,last);\r\n                //         // this.caculatePath(Line.NowSite,next.NowSite,Line);\r\n                //         // n.addLine(Line);\r\n                //         // //next.changPoint = Line.changPoint;\r\n                //         // //next.allLength = Line.allLength;\r\n                //         // //删除b上的节点\r\n                //         // //新建e连接next与last\r\n                //     }\r\n                //     return null\r\n                // }\r\n                \r\n                // if (!Line) {\r\n                //     Line = this.OF.pop()\r\n                //     n.SiteLines.push(Line);\r\n                // }\r\n                // //计算路径\r\n                // // var { x, y, allLength, firstRadian, lastRadian, rectDir, rectH, rectW } = DMath.pathCalcaulate(n.node.x, n.node.y, e.node.x, e.node.y)\r\n                // // Line.allLength = allLength;\r\n                // // Line.changPoint = []\r\n                // // Line.changPoint.push({ length: rectDir ? rectW : rectH, point: cc.v2(x, y), Radian: firstRadian })\r\n                // // Line.changPoint.push({ length: allLength, point: e.node.position, Radian: lastRadian });\r\n                // this.caculatePath(n,e,Line);\r\n                // //Line.rchangePoint = [].concat(Line.changPoint).reverse()\r\n                // Line.NowSite = n;\r\n                // Line.LineType = t;\r\n                // var lastSiteLine = b?b.SiteLines.find(value=>value.LineType===t):null;\r\n                // if(lastSiteLine&&lastSiteLine!==Line)\r\n                // {\r\n                //     Line.LastLine = lastSiteLine\r\n                // }\r\n                // Line.node = node;\r\n\r\n                // if(!next)\r\n                // {\r\n                //     next = this.OF.pop();\r\n                //     e.SiteLines.push(next);\r\n                // }\r\n                // else\r\n                // {\r\n                //     var Old = next;\r\n                //     next = this.OF.pop();\r\n                //     Old.destory(next);\r\n                //     e.SiteLines[e.SiteLines.findIndex(value=>value===next)]=next;\r\n                // }\r\n\r\n                // next.LineType = t;\r\n                // next.LastLine = Line;\r\n                // next.NowSite = e;\r\n                // next.node = e.node;\r\n                // next.allLength =  Line.allLength;\r\n                // next.changPoint = Line.changPoint;\r\n                // Line.NextLine = next;\r\n                \r\n                // return Line\r\n            }\r\n            else\r\n                return null;\r\n        }\r\n        destory(newLine:SiteLineMachine)\r\n        {\r\n            this.NextLine = newLine;\r\n            this.node.on('runEnd',()=>{\r\n                this.NextLine=null;\r\n                this.LastLine=null;\r\n                PrefabFactor.NodePush(this.node);\r\n            })\r\n        }\r\n        get isEnd(): boolean {\r\n            return !this.NextLine\r\n        }\r\n        get isBegin(): boolean {\r\n            return !this.LastLine\r\n        }\r\n        getLocation(progress: number, dir: boolean = true): { position: cc.Vec2, radian: number } {\r\n            var nLine = dir?this:this.LastLine;\r\n            var narr = nLine.changPoint//dir?this.changPoint:this.rchangePoint\r\n            var nprogress = dir ? progress : nLine.allLength - progress;\r\n            var idx = narr.findIndex(value => value.length >= nprogress)\r\n            var cp = narr[idx]\r\n            var lastp = nLine.NowSite.node.position;\r\n            var nLenght = cp.length;\r\n            if (idx >= 1) {\r\n                lastp = narr[idx - 1].point;\r\n                nprogress -= narr[idx-1].length\r\n                nLenght -= narr[idx-1].length\r\n            }\r\n            var np = lastp.lerp(cp.point, nprogress /nLenght) //dir?lastp.lerp(cp.point,cl):cp.point.lerp(lastp,cl);\r\n            return { position: np, radian: cp.Radian + (dir ? 0 : Math.PI) };\r\n            // return dir?this.NowSite.node.position.lerp(this.NextLine.NowSite.node.position,progress):this.NextLine.NowSite.node.position.lerp(this.NowSite.node.position,progress);\r\n        }\r\n        checkType(type: number, result: MSM.OperatorStruct<boolean>, dir: boolean) {\r\n            if(result.operatorInformation.unfirst&&this.NowSite.SiteType===type)\r\n            {\r\n                result.operatorValue = true;\r\n                return;\r\n            }\r\n            else\r\n            {\r\n                result.operatorInformation.unfirst = true;\r\n            }\r\n            dir ?this.NextLine?this.NextLine.checkType(type, result,dir):null :this.LastLine?this.LastLine.checkType(type, result,dir):null;\r\n        }\r\n    }\r\n}\r\nexport interface ISite {\r\n    checkType(type: number, result: MSM.OperatorStruct<boolean>,dir:boolean)\r\n    pushPeople(people: MSM.OperatorStruct<SitePeople>)\r\n    loadingPoeple(result: MSM.OperatorStruct<SitePeople>)\r\n}\r\n\r\nexport module SiteSM {\r\n    @MSMDsc.mStateMachine\r\n    @ccclass\r\n    export class SiteMachine extends MSM.StateMachine implements ISite, IInput {\r\n        @mSyncFunc\r\n        pushPeople(people: MSM.OperatorStruct<SitePeople>) {\r\n\r\n        }\r\n        @mSyncFunc\r\n        loadingPoeple(result: MSM.OperatorStruct<SitePeople>) {\r\n        }\r\n        @mSyncFunc\r\n        checkType(type: number, result: MSM.OperatorStruct<boolean>,dir:boolean) {\r\n\r\n        }\r\n        @property([SitePeople])\r\n        SitePeople: SitePeople[] = []\r\n        SiteLines: Path.VehiclePath[] = []\r\n        PF: PrefabFactor = null\r\n        @property({type:cc.Enum(SiteType)})\r\n        SiteType: SiteType = SiteType.rect\r\n        @mSyncFunc\r\n        touch(touchEvent: cc.Touch) {\r\n\r\n        }\r\n        @mSyncFunc\r\n        touchStart(touchEvent: cc.Touch) {\r\n\r\n        }\r\n        @mSyncFunc\r\n        touchEnd(touchEvent: cc.Touch) {\r\n\r\n        }\r\n        @mSyncFunc\r\n        touchCancel(touchEvent: cc.Touch) {\r\n\r\n        }\r\n        static SiteMachines: SiteMachine[] = []\r\n        onLoad()\r\n        {\r\n            IPSM.InputManage.getInstance(this,true).addInput(this);\r\n        }\r\n        start() {\r\n            super.start();\r\n            SiteMachine.SiteMachines.push(this);\r\n            this.PF = PrefabFactor.Instance\r\n        }\r\n        onDestroy() {\r\n            var idx = SiteMachine.SiteMachines.findIndex(value => value === this)\r\n            if(idx>-1)\r\n            SiteMachine.SiteMachines.splice(idx, 1);\r\n        }\r\n        removeLine(line:Path.VehiclePath)\r\n        {\r\n            var idx = this.SiteLines.findIndex(value=>value===line);\r\n            if(idx>-1)\r\n            this.SiteLines.splice(idx,1);\r\n        }\r\n        addLine(line:Path.VehiclePath)\r\n        {\r\n            this.SiteLines.push(line);\r\n        }\r\n\r\n\r\n    }\r\n    export class SiteState extends MSM.State implements ISite, IInput {\r\n        pushPeople(people: MSM.OperatorStruct<SitePeople>) {\r\n        }\r\n        loadingPoeple(result: MSM.OperatorStruct<SitePeople>) {\r\n        }\r\n        checkType(type: number, result: MSM.OperatorStruct<boolean>,dir:boolean) {\r\n\r\n        }\r\n        touch(touchEvent: cc.Touch) {\r\n\r\n        }\r\n        touchStart(touchEvent: cc.Touch) {\r\n\r\n        }\r\n        touchEnd(touchEvent: cc.Touch) {\r\n\r\n        }\r\n        touchCancel(touchEvent: cc.Touch) {\r\n\r\n        }\r\n        // private ctx:SiteMachine = null;\r\n        // get context():SiteMachine\r\n        // {\r\n        //     return this.ctx\r\n        // }\r\n        // set context(val)\r\n        // {\r\n        //     this.ctx = val;\r\n        // }\r\n        context: SiteMachine\r\n    }\r\n}\r\n"]}