{"version":3,"sources":["..\\..\\..\\..\\..\\assets\\Material\\Sahder/assets\\Material\\Sahder\\test.js"],"names":["shader","name","defines","vert","frag","cc","game","once","EVENT_ENGINE_INITED","renderer","_forward","_programLib","define","module","exports"],"mappings":";;;;;;AAAA,IAAIA,SAAS;AACTC,UAAM,MADG;;AAGTC,aAAS,EAHA;AAKTC,0QALS;AAoBbC;;AApBa,CAAb;;AAqDAC,GAAGC,IAAH,CAAQC,IAAR,CAAaF,GAAGC,IAAH,CAAQE,mBAArB,EAA0C,YAAY;AAClDH,OAAGI,QAAH,CAAYC,QAAZ,CAAqBC,WAArB,CAAiCC,MAAjC,CAAwCZ,OAAOC,IAA/C,EAAqDD,OAAOG,IAA5D,EAAkEH,OAAOI,IAAzE,EAA+EJ,OAAOE,OAAtF;AACH,CAFD;;AAIAW,OAAOC,OAAP,GAAiBd,MAAjB","file":"test.js","sourceRoot":"..\\..\\..\\..\\..\\assets\\Material\\Sahder","sourcesContent":["let shader = {\r\n    name: 'test',\r\n\r\n    defines: [\r\n    ],\r\n    vert:\r\n    `\r\nuniform mat4 viewProj;\r\nattribute vec3 a_position;\r\nattribute vec2 a_uv0;\r\nvarying vec2 uv0;\r\nfloat remain(float a,float b)\r\n{\r\n    return a-floor(a/b);\r\n}\r\nvoid main () {\r\nvec4 pos = viewProj * vec4(a_position, 1);\r\ngl_Position = pos;\r\nuv0 = a_uv0;\r\n}`,\r\nfrag:\r\n    `\r\n    uniform sampler2D texture;\r\n    uniform vec4 color;\r\n    varying vec2 uv0;\r\n    void main () {\r\n        float netFilterWidth = 0.01;\r\n        float netFilterHeight = 0.01;\r\n        vec4 _color = vec4(.0,.0,.0,.0);\r\n        vec2 coords = vec2(.0,.0);\r\n        coords.x = uv0.x-netFilterWidth;\r\n        coords.y = uv0.y-netFilterHeight;\r\n        for(int f=0;f<3;f++)\r\n        {\r\n            vec4 tap = texture2D(texture,coords);\r\n            _color+=tap;\r\n            coords.y+=netFilterHeight;\r\n        }\r\n        for(int i =0;i<3;i++)\r\n        {\r\n            vec4 tap = texture2D(texture,coords);\r\n            _color+=tap;\r\n            coords.x+=netFilterWidth;\r\n        }\r\n        _color= _color/6.0;\r\n        vec4 c = texture2D(texture, uv0);\r\n        c=vec4(1.0)-((vec4(1.0)-_color)*(vec4(1.0)-c));\r\n        gl_FragColor = c; \r\n    }\r\n`,\r\n\r\n};\r\n\r\ncc.game.once(cc.game.EVENT_ENGINE_INITED, function () {\r\n    cc.renderer._forward._programLib.define(shader.name, shader.vert, shader.frag, shader.defines);\r\n});\r\n\r\nmodule.exports = shader;"]}