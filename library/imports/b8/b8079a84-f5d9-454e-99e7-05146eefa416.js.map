{"version":3,"sources":["..\\..\\..\\..\\..\\..\\assets\\script\\vehicle\\states/assets\\script\\vehicle\\states\\VehicleStates.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"..\\..\\..\\..\\..\\..\\assets\\script\\vehicle\\states","sourcesContent":["import { MSM } from \"../../../frame/StateMachine/StateMachine\";\r\nimport { MSMDsc } from \"../../../frame/StateMachine/StateDec\";\r\nimport { Vehicle } from \"../VehicleMachine\";\r\nimport { SLDSM } from \"../../site/SiteLine\";\r\n/**\r\n * 已完成载具移动（依赖于线计算位置）\r\n * 已完成到达站点卸人载人（是否上下车依赖站点检查类型）\r\n * 已完成自动转向\r\n */\r\nconst { mDefaultState, mLinkTo, mState } = MSMDsc\r\nexport module VehicleStates {\r\n\r\n    @mDefaultState\r\n    @mLinkTo('Load', 'loading')\r\n    @mState('Default', Vehicle.VehicleMachine)\r\n    export class Default extends Vehicle.VehicleState {\r\n        lastLine: SLDSM.SiteLine = null;\r\n        Start() {\r\n            this.context.line.addVehicle(this.context)\r\n\r\n        }\r\n        update(dt) {\r\n            var nPro = this.context.nowProgress + dt * this.context.rate;\r\n            var sLine = this.context.line;\r\n            if (nPro > 0 && nPro < this.context.line.allLength) {\r\n                var { position, radian } = this.context.line.getLocation(nPro, this.context.rundir);\r\n                this.context.node.position = position;\r\n                this.context.nowProgress = nPro;\r\n                this.context.node.rotation = DMath.radianToAngle(radian)\r\n            }\r\n            else {\r\n                if (this.context.rundir) {\r\n                    this.context.nowSite = this.context.line.nextSite;\r\n                    if (this.context.line.isEnd) {\r\n                        this.context.rundir = !this.context.rundir;\r\n                    }\r\n                    else if (this.context.line.NextPath) {\r\n\r\n                        this.context.line = this.context.line.NextPath;\r\n                    }\r\n                }\r\n                else {\r\n                    this.context.nowSite = this.context.line.lastSite;\r\n                    if (this.context.line.isBegin) {\r\n                        this.context.rundir = !this.context.rundir;\r\n                    } else if (this.context.line.LastPath) {\r\n\r\n                        this.context.line = this.context.line.LastPath;\r\n                    }\r\n                }\r\n\r\n                sLine.removeVehicle(this.context);\r\n\r\n                //this.context.line = this.context.nowSite.SiteLines.find(value=>value.LineType==this.context.line.LineType);\r\n\r\n                //this.context.nowSite = this.context.rundir? this.context.line.NextLine?this.context.line.NextLine.NowSite:this.context.line.NowSite:this.context.line.LastLine?this.context.line.LastLine.LastSite:this.context.line.NowSite;\r\n                // if (this.context.line.isBegin || this.context.line.isEnd||this.context.getNextLine().ClearFlag) {\r\n                //     this.context.rundir = !this.context.rundir;\r\n                //     //this.context.nowProgress= this.context.line.isBegin?0.9:0.1;\r\n                // }\r\n                this.context.nowProgress = 0;\r\n                this.context.emit('loading')\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n    @mLinkTo('Default', 'loaded')\r\n    @mState('Load', Vehicle.VehicleMachine)\r\n    export class Loading extends Vehicle.VehicleState {\r\n        Start() {\r\n            var nowSite = this.context.nowSite\r\n            var sitePeople = nowSite.SitePeople;\r\n\r\n            var peoples = this.context.peoples;\r\n            var _this = this;\r\n            this.context.startCoroutine_Auto((function* () {\r\n                for (var i = peoples.length - 1; i >= 0; i--) {\r\n                    var np = peoples[i]\r\n                    if (np && np.GetOffVehicle(_this.context)) {\r\n                        yield MSM.AwaitNextSecond.getInstance(0.4);\r\n                        _this.context.node.removeChild(np.node);\r\n                        nowSite.pushPeople(MSM.OperatorStruct.getinstance(np));\r\n                        peoples.splice(i, 1)\r\n                    }\r\n                    // var r = MSM.OperatorStruct.getinstance(false);\r\n                    // nowLine.checkType(np.peopleType,r,dir);\r\n                    // var canZ = false;\r\n                    // if(!r.operatorValue)\r\n                    // {\r\n                    //     nowSite.checkType(np.peopleType,r,true);\r\n                    //     canZ = r.operatorValue\r\n                    // }\r\n                    // if(np.peopleType===nowSite.SiteType||canZ)\r\n                    // {\r\n                    //     _this.context.node.removeChild(np.node);\r\n                    //     nowSite.pushPeople(MSM.OperatorStruct.getinstance(np));\r\n                    //     peoples.splice(i,1)\r\n                    // }\r\n                    // r.recycle()\r\n                }\r\n                // for(var item in peoples)\r\n                // {\r\n                //     yield new MSM.AwaitNextSecond(0.4);\r\n                //     if(peoples[item].peopleType==nowSite.SiteType)\r\n                //     {\r\n                //         _this.context.node.removeChild(peoples[item].node)\r\n                //         nowSite.pushPeople(MSM.OperatorStruct.getinstance(peoples.splice(Number.parseInt(item),1)[0]));\r\n                //     }\r\n                // }\r\n\r\n                for (var item = sitePeople.length; item >= 0; item--) {\r\n\r\n                    //var result = MSM.OperatorStruct.getinstance(false)\r\n                    var loadpeop = sitePeople[item]\r\n                    if (loadpeop && loadpeop.GetInVehicle(_this.context)) {\r\n                        yield MSM.AwaitNextSecond.getInstance(0.4);\r\n                        var OS = MSM.OperatorStruct.getinstance(loadpeop)\r\n                        nowSite.loadingPoeple(OS);\r\n                        loadpeop.node.setParent(_this.context.node);\r\n                        peoples.unshift(loadpeop)\r\n                        OS.recycle();\r\n                    }\r\n                    //nowLine.checkType(sitePeople[item].peopleType,result,dir);\r\n                    // nowSite.checkType(sitePeople[item].peopleType,result,dir)\r\n                    // if(result.operatorValue)\r\n                    // {\r\n                    //     var loadpeop = sitePeople[item];\r\n                    //     var OS = MSM.OperatorStruct.getinstance(loadpeop)\r\n                    //     nowSite.loadingPoeple(OS);\r\n                    //     loadpeop.node.setParent(_this.context.node);\r\n                    //     peoples.push(loadpeop)\r\n                    //     OS.recycle();\r\n                    //     //_this.context.node.addChild(sitePeople[item].node) \r\n                    // }\r\n                    // result.recycle(); \r\n                }\r\n                _this.context.emit('loaded');\r\n            })())\r\n        }\r\n    }\r\n\r\n}\r\n"]}