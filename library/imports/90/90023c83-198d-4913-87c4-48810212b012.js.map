{"version":3,"sources":["..\\..\\..\\..\\..\\assets\\frame\\PrefabFactory/assets\\frame\\PrefabFactory\\PrefabFactory.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"..\\..\\..\\..\\..\\assets\\frame\\PrefabFactory","sourcesContent":["import ObjectPool from \"../ObjectPool/ObjectPool\";\r\n\r\n\r\nconst {ccclass, property} = cc._decorator;\r\n/**\r\n * Prefab工厂类，将此类放置在node上并填入需要使用的Prefab就会自动实例化\r\n */\r\n@ccclass\r\nexport default class PrefabFactor extends cc.Component {\r\n    @property([cc.Prefab])\r\n    Prefabs:{prefab:cc.Prefab,path:string}[] = []\r\n    @property\r\n    InitValue:number = 10;\r\n    // LIFE-CYCLE CALLBACKS:\r\n\r\n    // onLoad () {}\r\n    PrefabPool:{name:string,pool:ObjectPool<cc.Node>,prefab:cc.Prefab,path:string}[] = []\r\n    private isStatic:boolean = false;\r\n    isLoaded:boolean = false;\r\n    static NodePush(node:cc.Node)\r\n    {\r\n        var factory:PrefabFactor =node['__factory']\r\n        if(factory)\r\n        {\r\n            factory.push(node);\r\n        }\r\n        else\r\n        {\r\n            if(CC_DEBUG)\r\n            {\r\n                console.log('node not have factory');\r\n                console.log(node);\r\n            }\r\n        }\r\n    }\r\n    private static _Instance:PrefabFactor = null\r\n    static get Instance():PrefabFactor\r\n    {\r\n        if(!this._Instance)\r\n        {\r\n            var node = new cc.Node('staticPF');\r\n            var pf = node.addComponent(PrefabFactor);\r\n            pf.isStatic = true;\r\n            this._Instance = pf;\r\n            cc.game.addPersistRootNode(node);\r\n        }\r\n        return this._Instance;\r\n    }\r\n    static Loaded:string = 'Loaded';\r\n    Nodefactory(pree:{prefab:cc.Prefab,path:string})\r\n    {\r\n        var pre = pree.prefab\r\n        var node = cc.instantiate(pre);\r\n        node['__factoryName']=pre.name;\r\n        node['__factory']=this;\r\n        return node;\r\n    }\r\n    static LoadRes(path,type?:typeof cc.Asset):Promise<any>\r\n    {\r\n        return new Promise<any>((res,rej)=>{\r\n            if(type)\r\n            {\r\n                cc.loader.loadRes(path,type,(err,data)=>{\r\n                    if(err)\r\n                    {\r\n                        console.error('cc.loader.loadRes prefab/config.json '+err.message)\r\n                        rej();\r\n                    }\r\n                    else\r\n                    {\r\n                        res(data);\r\n                    }\r\n                })\r\n            }\r\n            else\r\n            {\r\n                cc.loader.loadRes(path,(err,data)=>{\r\n                    if(err)\r\n                    {\r\n                        console.error('cc.loader.loadRes prefab/config.json '+err.message)\r\n                        rej();\r\n                    }\r\n                    else\r\n                    {\r\n                        res(data);\r\n                    }\r\n                })\r\n            }\r\n        }) \r\n    }\r\n    static prefabConfig = 'prefab/config';\r\n    async LoadAllRes()\r\n    {\r\n        var data = await PrefabFactor.LoadRes(PrefabFactor.prefabConfig);\r\n        if(data)\r\n        {\r\n            var config = data.json;\r\n            for(var item in config.path)\r\n            {\r\n                this.Prefabs.push({prefab: await PrefabFactor.LoadRes(config.path[item],cc.Prefab),path:config.path[item]}) \r\n            }\r\n            this.PrefabPoolInit();\r\n        }\r\n    }\r\n    PrefabPoolInit()\r\n    {\r\n        if(this.PrefabPool.length!=this.Prefabs.length)\r\n        {\r\n            this.Prefabs.forEach(value=>{\r\n                var pool = new ObjectPool<cc.Node>(true);\r\n                for(var i=0;i<this.InitValue;i++)\r\n                {\r\n                    pool.push(this.Nodefactory(value));\r\n                }\r\n                this.PrefabPool.push({name:value.prefab.name,pool,prefab:value.prefab,path:value.path})\r\n            })\r\n        }\r\n        this.node.emit(PrefabFactor.Loaded)\r\n    }\r\n    LPoolInit(pree:{prefab:cc.Prefab,path:string})\r\n    {\r\n        var value =pree\r\n        var pool = new ObjectPool<cc.Node>(true);\r\n        for(var i=0;i<this.InitValue;i++)\r\n        {\r\n            pool.push(this.Nodefactory(value));\r\n        }\r\n        var p ={name:value.prefab.name,pool,prefab:value.prefab,path:value.path}\r\n        this.PrefabPool.push(p)\r\n        return p;\r\n    }\r\n    start () {\r\n        if(this.isStatic)\r\n        {\r\n            \r\n            this.LoadAllRes();\r\n        }\r\n        else\r\n        {\r\n            this.PrefabPoolInit();\r\n        }\r\n    }\r\n    pop(name:string|number):cc.Node\r\n    {\r\n        var rePool = null;\r\n        if(typeof name === 'string')\r\n        {\r\n            rePool = this.PrefabPool.find(value=>value.name===name);\r\n        }\r\n        else if(typeof name === 'number')\r\n        [\r\n            rePool = this.PrefabPool.length>name?this.PrefabPool[name]:null\r\n        ]\r\n        if(rePool)\r\n        {\r\n            var renode = rePool.pool.pop();\r\n            if(!renode)\r\n            {\r\n                renode = this.Nodefactory(rePool)\r\n                rePool.pool.push(renode); \r\n            }\r\n            return renode;\r\n        }\r\n    }\r\n    async pop_path(path:string,...reuseValue)\r\n    {\r\n        var result = this.PrefabPool.find(value=>value.path===path);\r\n        if(!result)\r\n        {\r\n            var prefab:cc.Prefab =  await PrefabFactor.LoadRes(path,cc.Prefab);\r\n            result = this.LPoolInit({prefab:prefab,path:path})\r\n        }\r\n        var renode = result.pool.pop(reuseValue)\r\n        if(!renode)\r\n        {\r\n            renode = this.Nodefactory(result)\r\n            //result.pool.push(renode);\r\n        }\r\n        return renode;\r\n        \r\n    }\r\n    push(node:cc.Node,name?:string)\r\n    {\r\n        var prefabName = name?name:node['__factoryName'];\r\n        if(!prefabName)\r\n        {\r\n            if(CC_DEBUG)\r\n            {\r\n                console.warn('node not have name');\r\n            }\r\n        }\r\n        var rePool = this.PrefabPool.find(value=>value.name===prefabName);\r\n        if(rePool)\r\n        {\r\n            rePool.pool.push(node);\r\n        }\r\n        else\r\n        {\r\n            if(CC_DEBUG)\r\n            {\r\n                console.warn(\"Pool not find name:%s\",prefabName)\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    // update (dt) {}\r\n}\r\n"]}