{"version":3,"sources":["..\\..\\..\\..\\..\\..\\assets\\script\\render\\states/assets\\script\\render\\states\\lineRenderStates.ts"],"names":[],"mappings":";;;;;AAAA,4CAA2C;AAC3C,iEAA8D;AAC9D,gDAA4C;AAC5C,qCAA8D;AAC9D,4CAAyC;AAElC,IAAA,yDAAe,EAAC,uEAAsB,CAAa;AACnD,IAAA,iCAAM,EAAC,+CAAa,EAAC,mCAAO,CAAQ;AACpC,IAAA,oCAAQ,CAAQ;AACvB,IAAc,gBAAgB,CAiD7B;AAjDD,WAAc,gBAAgB;IAG1B;QAAgC,8BAAe;QAA/C;YAAA,qEA2BC;YAzBG,eAAS,GAAY,EAAE,CAAC;;QAyB5B,CAAC;QAxBG,yBAAI,GAAJ;YAEI,IAAI,CAAC,GAAG,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC;YAC9B,IAAI,QAAQ,GAAG,CAAC,CAAC,SAAS,CAAC;YAC3B,CAAC,CAAC,SAAS,GAAG,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC;YACrC,IAAI,UAAU,GAAY,EAAE,CAAC;YAC7B,IAAI,CAAC,SAAS,GAAG,UAAU,CAAC;YAC5B,CAAC,CAAC,KAAK,EAAE,CAAC;YACV,IAAI,OAAO,GAAG,aAAI,CAAC,WAAW,CAAC,OAAO,CAAC;YACvC,OAAO,CAAC,OAAO,CAAC,UAAA,CAAC;gBACb,IAAI,KAAK,GAAG,yBAAiB,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC;gBAC1C,CAAC,CAAC,WAAW,GAAG,KAAK,CAAC;gBACtB,IAAI,UAAU,GAAG,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC;gBACxC,CAAC,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC,EAAC,UAAU,CAAC,CAAC,CAAC,CAAC;gBACpC,KAAI,IAAI,CAAC,GAAG,CAAC,EAAC,CAAC,GAAC,CAAC,CAAC,WAAW,CAAC,MAAM,EAAC,CAAC,EAAE,EACxC;oBACI,IAAI,EAAE,GAAG,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC;oBAChC,CAAC,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC,EAAC,EAAE,CAAC,CAAC,CAAC,CAAC;iBACvB;gBACD,CAAC,CAAC,MAAM,EAAE,CAAC;YACf,CAAC,CAAC,CAAA;YACF,CAAC,CAAC,SAAS,GAAC,QAAQ,CAAC;QAEzB,CAAC;QACL,iBAAC;IAAD,CA3BA,AA2BC,CA3B+B,eAAe,GA2B9C;IA3BY,2BAAU,aA2BtB,CAAA;IAKD;QAA6B,2BAAU;QAAvC;;QAMA,CAAC;QAJG,8BAAY,GAAZ;YAEI,IAAI,CAAC,IAAI,EAAE,CAAC;QAChB,CAAC;QALQ,OAAO;YAHnB,aAAa;YACb,OAAO,CAAC,UAAU,EAAC,MAAM,CAAC;YAC1B,MAAM,CAAC,SAAS,EAAC,sBAAsB,CAAC;WAC5B,OAAO,CAMnB;QAAD,cAAC;KAND,AAMC,CAN4B,UAAU,GAMtC;IANY,wBAAO,UAMnB,CAAA;IAID;QAA8B,4BAAU;QAAxC;;QAGA,CAAC;QAHY,QAAQ;YAFpB,OAAO,CAAC,SAAS,EAAC,SAAS,CAAC;YAC5B,MAAM,CAAC,UAAU,EAAC,sBAAsB,CAAC;WAC7B,QAAQ,CAGpB;QAAD,eAAC;KAHD,AAGC,CAH6B,UAAU,GAGvC;IAHY,yBAAQ,WAGpB,CAAA;AACL,CAAC,EAjDa,gBAAgB,GAAhB,wBAAgB,KAAhB,wBAAgB,QAiD7B","file":"","sourceRoot":"..\\..\\..\\..\\..\\..\\assets\\script\\render\\states","sourcesContent":["import { LineRender } from \"../LineRender\";\r\nimport { MSMDsc } from \"../../../frame/StateMachine/StateDec\";\r\nimport { SLDSM } from \"../../site/SiteLine\";\r\nimport { SiteLineType, ConvertRGBToColor } from \"../../Enums\";\r\nimport { Path } from \"../../Path/PathSM\";\r\n\r\nconst {LineRenderState,LineRenderStateMachine}=LineRender;\r\nconst {mState,mDefaultState,mLinkTo}=MSMDsc\r\nconst {SiteLine}=SLDSM;\r\nexport module LineRenderStates\r\n{\r\n    type LineSave = {type:SiteLineType,node:SLDSM.SiteLine[]}[]\r\n    export class BaseRender extends LineRenderState\r\n    {\r\n        drawCache:LineSave = [];\r\n        draw()\r\n        {\r\n            var g = this.context.graphics;\r\n            var oldWidth = g.lineWidth;\r\n            g.lineWidth = this.context.lineWidth;\r\n            var drawedSite:LineSave = [];\r\n            this.drawCache = drawedSite;\r\n            g.clear();\r\n            var allPath = Path.VehiclePath.allPath;\r\n            allPath.forEach(v=>{\r\n                var color = ConvertRGBToColor(v.PathType);\r\n                g.strokeColor = color;\r\n                var firstPoint = v.changePoint[0].point;\r\n                g.moveTo(firstPoint.x,firstPoint.y);\r\n                for(var i = 1;i<v.changePoint.length;i++)\r\n                {\r\n                    var np = v.changePoint[i].point;\r\n                    g.lineTo(np.x,np.y);\r\n                }\r\n                g.stroke();\r\n            })\r\n            g.lineWidth=oldWidth;\r\n            \r\n        }\r\n    }\r\n    \r\n    @mDefaultState\r\n    @mLinkTo('DragLine','drag')\r\n    @mState('Default',LineRenderStateMachine)\r\n    export class Default extends BaseRender\r\n    {\r\n        updateRender()\r\n        {\r\n            this.draw();\r\n        }\r\n    }\r\n    \r\n    @mLinkTo('Default','dragEnd')\r\n    @mState('DragLine',LineRenderStateMachine)\r\n    export class DragLine extends BaseRender\r\n    {\r\n\r\n    }\r\n}"]}