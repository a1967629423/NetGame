{"version":3,"sources":["..\\..\\..\\..\\..\\..\\assets\\script\\render\\states/assets\\script\\render\\states\\SiteRenderStates.ts"],"names":[],"mappings":";;;;;AAAA,iEAA8D;AAC9D,4CAA2C;AAC3C,gDAA4C;AAC5C,qCAA8D;AAC9D,kDAAiD;AAEjD,4CAAyC;AACzC,gEAA2D;AAC3D,4CAA2C;AAC3C,oEAA8D;AAC9D,0DAAkD;AAE3C,IAAA,iCAAM,EAAC,mCAAO,EAAC,+CAAa,EAAC,6CAAY,EAAC,mCAAO,EAAC,mCAAO,CAAQ;AACjE,IAAA,yDAAe,EAAC,uEAAsB,CAAY;AAClD,IAAA,oCAAQ,CAAQ;AAChB,IAAA,sEAAwB,CAAM;AACrC,IAAc,gBAAgB,CAuN7B;AAvND,WAAc,gBAAgB;IAE1B;QAA8B,4BAAe;QAA7C;YAAA,qEA8BC;YA5BG,eAAS,GAAa,EAAE,CAAC;;QA4B7B,CAAC;QA3BG,uBAAI,GAAJ;YAAA,iBA0BC;YAxBG,IAAI,CAAC,GAAG,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC;YAC9B,IAAI,UAAU,GAAa,EAAE,CAAC;YAC9B,IAAI,CAAC,SAAS,GAAG,UAAU,CAAC;YAC5B,CAAC,CAAC,KAAK,EAAE,CAAC;YACV,CAAC,CAAC,MAAM,CAAC,CAAC,EAAC,CAAC,CAAC,CAAC;YACd,IAAI,QAAQ,GAAG,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,QAAQ,CAAC;YAC1C,QAAQ,CAAC,OAAO,CAAC,UAAA,KAAK;gBAClB,IAAI,OAAO,GAAG,KAAK,CAAC,YAAY,CAAC,uBAAa,CAAC,CAAC;gBAChD,IAAG,OAAO,EACV;oBACI,OAAO,CAAC,MAAM,CAAC,OAAO,CAAC,UAAC,CAAC,EAAC,GAAG;wBACzB,IAAI,KAAK,GAAG,CAAC,CAAC,GAAG,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC;wBAClC,IAAG,GAAG,KAAG,CAAC;4BAAC,CAAC,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,EAAC,KAAK,CAAC,CAAC,CAAC,CAAC;;4BAErC,CAAC,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,EAAC,KAAK,CAAC,CAAC,CAAC,CAAC;oBAC9B,CAAC,CAAC,CAAC;oBACH,IAAG,OAAO,CAAC,MAAM,CAAC,MAAM,GAAC,CAAC;wBAC1B,CAAC,CAAC,KAAK,EAAE,CAAC;iBACb;;oBAED,CAAC,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,EAAC,KAAK,CAAC,CAAC,EAAC,KAAI,CAAC,OAAO,CAAC,UAAU,CAAC,CAAC;YACtD,CAAC,CAAC,CAAC;YACH,CAAC,CAAC,IAAI,EAAE,CAAA;YACR,CAAC,CAAC,MAAM,EAAE,CAAC;QACf,CAAC;QACL,eAAC;IAAD,CA9BA,AA8BC,CA9B6B,eAAe,GA8B5C;IA9BY,yBAAQ,WA8BpB,CAAA;IAMD;QAA6B,2BAAQ;QAArC;;QAMA,CAAC;QAJG,uBAAK,GAAL;YAEI,IAAI,CAAC,IAAI,EAAE,CAAC;QAChB,CAAC;QALQ,OAAO;YAJnB,aAAa;YACb,OAAO,CAAC,QAAQ,EAAC,QAAQ,CAAC;YAC1B,OAAO,CAAC,MAAM,EAAC,MAAM,CAAC;YACtB,MAAM,CAAC,SAAS,EAAC,sBAAsB,CAAC;WAC5B,OAAO,CAMnB;QAAD,cAAC;KAND,AAMC,CAN4B,QAAQ,GAMpC;IANY,wBAAO,UAMnB,CAAA;IAGD;QAA0B,wBAAQ;QAAlC;;QAGA,CAAC;QAHY,IAAI;YAFhB,OAAO,CAAC,SAAS,EAAC,SAAS,CAAC;YAC5B,MAAM,CAAC,MAAM,EAAC,sBAAsB,CAAC;WACzB,IAAI,CAGhB;QAAD,WAAC;KAHD,AAGC,CAHyB,QAAQ,GAGjC;IAHY,qBAAI,OAGhB,CAAA;IAID;QAA2B,yBAAQ;QAHnC;YAAA,qEA0FC;YArFG,QAAE,GAAsB,IAAI,CAAC;YAC7B,cAAQ,GAAc,IAAI,CAAC;YAC3B,aAAO,GAAoB,IAAI,CAAC;YAChC,qBAAe,GAAoB,EAAE,CAAC;YACtC,kBAAY,GAAsB,EAAE,CAAC;YACrC,qBAAe,GAAsB,EAAE,CAAC;YACxC,aAAO,GAAgB,oBAAY,CAAC,GAAG,CAAC;;QA+E5C,CAAC;QA9EG,qBAAK,GAAL,UAAM,SAA4B,EAAC,KAAa;YAE5C,IAAI,CAAC,EAAE,GAAG,SAAS,CAAC;YACpB,IAAI,aAAa,GAAG,uBAAU,CAAC,sBAAsB,CAAC,QAAQ,CAAC;YAC/D,IAAI,CAAC,QAAQ,GAAG,aAAa,CAAC,cAAc,EAAE,CAAC;YAC/C,IAAI,QAAQ,GAAG,2BAAgB,CAAC,QAAQ,CAAC,WAAW,EAAE,CAAC;YACvD,IAAI,CAAC,OAAO,GAAG,QAAQ,CAAC;YACxB,IAAI,CAAC,OAAO,GAAG,2BAAgB,CAAC,QAAQ,CAAC,UAAU,CAAC,SAAS,CAAC,IAAI,CAAC,QAAQ,EAAC,KAAK,EAAC,QAAQ,CAAC,CAAC;YAC5F,IAAI,CAAC,QAAQ,CAAC,WAAW,GAAG,yBAAiB,CAAC,QAAQ,CAAC,CAAC;YACxD,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;YACxC,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;QACpC,CAAC;QACD,qBAAK,GAAL,UAAM,CAAU;YAEZ,IAAI,KAAK,GAAG,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC,CAAC,WAAW,EAAE,CAAC,CAAC;YAClD,IAAI,KAAK,GAAG,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,oBAAoB,CAAC,wBAAwB,CAAC,CAAC,CAAC,WAAW,EAAE,EAAC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC;YAChH,IAAG,KAAK,IAAE,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,UAAA,CAAC,IAAE,OAAA,CAAC,KAAG,KAAK,EAAT,CAAS,CAAC,EAC/C;gBACI,IAAI,CAAC,EAAE,GAAG,KAAK,CAAC;gBAChB,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;gBAChC,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,IAAI,CAAC,OAAO,CAAC,UAAU,EAAC,KAAK,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;gBACnE,IAAI,QAAQ,GAAG,2BAAgB,CAAC,QAAQ,CAAC,WAAW,EAAE,CAAC;gBACvD,IAAI,CAAC,OAAO,GAAG,2BAAgB,CAAC,QAAQ,CAAC,UAAU,CAAC,KAAK,CAAC,IAAI,CAAC,QAAQ,EAAC,KAAK,EAAC,QAAQ,CAAC,CAAC;gBACxF,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;aAC3C;YACD,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,IAAI,CAAC,OAAO,CAAC,UAAU,EAAC,KAAK,CAAC,CAAC;QACzD,CAAC;QACD,sBAAM,GAAN;YAEI,IAAI,CAAC,IAAI,EAAE,CAAC;QAChB,CAAC;QACD,2BAAW,GAAX;YAEI,IAAI,CAAC,MAAM,EAAE,CAAC;QAClB,CAAC;QACD,wBAAQ,GAAR;YAEI,IAAI,CAAC,MAAM,EAAE,CAAC;QAClB,CAAC;QACD,oBAAI,GAAJ;YAEI,IAAI,CAAC,GAAG,IAAI,CAAC,QAAQ,CAAC;YACtB,IAAG,CAAC,EACJ;gBACI,CAAC,CAAC,KAAK,EAAE,CAAC;gBACV,IAAI,CAAC,eAAe,CAAC,OAAO,CAAC,UAAA,CAAC;oBAC1B,CAAC,CAAC,WAAW,CAAC,OAAO,CAAC,UAAC,CAAC,EAAC,GAAG;wBACxB,IAAG,GAAG,KAAG,CAAC;4BAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,EAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;;4BAEzC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,EAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;oBAClC,CAAC,CAAC,CAAA;oBACF,CAAC,CAAC,MAAM,EAAE,CAAC;gBACf,CAAC,CAAC,CAAC;aACN;QAEL,CAAC;QACD,sBAAM,GAAN;YAEI,IAAI,CAAC,IAAI,EAAE,CAAC;QAChB,CAAC;QACD,oBAAI,GAAJ;YAEI,IAAI,CAAC,EAAE,GAAG,IAAI,CAAC;YACf,IAAI,CAAC,OAAO,CAAC,YAAY,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;YACzC,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;YACrB,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;YACpB,IAAI,CAAC,OAAO,GAAG,oBAAY,CAAC,GAAG,CAAC;YAChC,IAAI,CAAC,eAAe,CAAC,OAAO,CAAC,UAAA,CAAC,IAAG,CAAC,CAAC,OAAO,EAAE,CAAA,CAAA,CAAC,CAAC,CAAC;YAC/C,IAAI,CAAC,eAAe,GAAG,EAAE,CAAC;YAC1B,KAAI,IAAI,GAAG,GAAE,CAAC,EAAC,GAAG,GAAC,IAAI,CAAC,YAAY,CAAC,MAAM,GAAC,CAAC,EAAC,GAAG,EAAE,EACnD;gBACI,IAAI,CAAC,GAAG,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,CAAC;gBAC/B,IAAI,EAAE,GAAG,IAAI,CAAC,YAAY,CAAC,GAAG,GAAC,CAAC,CAAC,CAAC;gBAClC,2BAAgB,CAAC,QAAQ,CAAC,OAAO,CAAC,IAAI,CAAC,OAAO,EAAC,IAAI,EAAC,CAAC,EAAC,EAAE,CAAC,CAAA;aAC5D;YACD,IAAI,CAAC,YAAY,GAAE,EAAE,CAAC;YACtB,IAAI,CAAC,eAAe,GAAC,EAAE,CAAC;QAC5B,CAAC;QAtFQ,KAAK;YAHjB,OAAO,EAAE;YACT,OAAO,CAAC,OAAO,CAAC;YAChB,MAAM,CAAC,OAAO,EAAC,sBAAsB,CAAC;WAC1B,KAAK,CAuFjB;QAAD,YAAC;KAvFD,AAuFC,CAvF0B,QAAQ,GAuFlC;IAvFY,sBAAK,QAuFjB,CAAA;IAGD;QAA4B,0BAAQ;QAFpC;YAAA,qEAwEC;YApEG,UAAI,GAAC,CAAC,CAAC;YACP,YAAM,GAAC,EAAE,CAAC;YACV,iBAAW,GAAG,CAAC,CAAC;;QAkEpB,CAAC;QAhEG,uBAAM,GAAN,UAAO,EAAE;YAEL,IAAI,CAAC,WAAW,GAAE,IAAI,CAAC,IAAI,GAAC,IAAI,CAAC,MAAM,GAAC,eAAM,CAAC,KAAK,CAAC,aAAa,CAAC,EAAE,CAAC,CAAC;QAC3E,CAAC;QACD,sBAAK,GAAL;YAEI,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,WAAW,GAAG,yBAAiB,CAAC,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC,CAAA;QACnF,CAAC;QACD,qBAAI,GAAJ;YAEI,iBAAM,IAAI,WAAE,CAAC;YACb,IAAI,CAAC,GAAG,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC;YAC9B,IAAI,QAAQ,GAAG,CAAC,CAAC,SAAS,CAAC;YAC3B,CAAC,CAAC,SAAS,GAAG,IAAI,CAAC,WAAW,CAAC;YAC/B,CAAC,CAAC,MAAM,CAAC,CAAC,EAAC,CAAC,CAAC,CAAC;YACd,IAAI,SAAS,GAAG,aAAI,CAAC,WAAW,CAAC,yBAAyB,CAAC,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC,CAAC;YACrF,OAAM,SAAS,EACf;gBACI,IAAI,UAAU,GAAG,SAAS,CAAC,QAAQ,CAAC,IAAI,CAAC;gBACzC,IAAI,OAAO,GAAG,UAAU,CAAC,YAAY,CAAC,uBAAa,CAAC,CAAC;gBACrD,IAAG,SAAS,CAAC,KAAK,EAClB;oBACI,UAAU,GAAG,SAAS,CAAC,QAAQ,CAAC,IAAI,CAAC;oBACrC,IAAI,WAAW,GAAG,SAAS,CAAC,QAAQ,CAAC,IAAI,CAAC;oBAC1C,IAAI,QAAQ,GAAG,WAAW,CAAC,YAAY,CAAC,uBAAa,CAAC,CAAC;oBAEvD,IAAG,QAAQ,EACX;wBACI,QAAQ,CAAC,MAAM,CAAC,OAAO,CAAC,UAAC,CAAC,EAAC,GAAG;4BAC1B,IAAI,KAAK,GAAG,CAAC,CAAC,GAAG,CAAC,UAAU,CAAC,QAAQ,CAAC,CAAA;4BACtC,IAAG,GAAG,KAAG,CAAC;gCAAC,CAAC,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,EAAC,KAAK,CAAC,CAAC,CAAC,CAAC;;gCAErC,CAAC,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,EAAC,KAAK,CAAC,CAAC,CAAC,CAAC;wBAC9B,CAAC,CAAC,CAAC;wBACH,IAAG,QAAQ,CAAC,MAAM,CAAC,MAAM,GAAC,CAAC;4BAAC,CAAC,CAAC,KAAK,EAAE,CAAC;qBACzC;yBAED;wBACI,CAAC,CAAC,MAAM,CAAC,WAAW,CAAC,CAAC,EAAC,WAAW,CAAC,CAAC,EAAC,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,CAAA;qBAChE;iBACJ;gBACD,IAAG,OAAO,EACV;oBACI,OAAO,CAAC,MAAM,CAAC,OAAO,CAAC,UAAC,CAAC,EAAC,GAAG;wBACzB,IAAI,KAAK,GAAG,CAAC,CAAC,GAAG,CAAC,UAAU,CAAC,QAAQ,CAAC,CAAA;wBACtC,IAAG,GAAG,KAAG,CAAC;4BAAC,CAAC,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,EAAC,KAAK,CAAC,CAAC,CAAC,CAAC;;4BAErC,CAAC,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,EAAC,KAAK,CAAC,CAAC,CAAC,CAAC;oBAC9B,CAAC,CAAC,CAAC;oBACH,IAAG,OAAO,CAAC,MAAM,CAAC,MAAM,GAAC,CAAC;wBAAC,CAAC,CAAC,KAAK,EAAE,CAAC;iBACxC;qBAED;oBACI,CAAC,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC,EAAC,UAAU,CAAC,CAAC,EAAC,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,CAAC;iBAC/D;gBACD,CAAC,CAAC,MAAM,EAAE,CAAC;gBACX,SAAS,GAAG,SAAS,CAAC,QAAQ,CAAC;aAClC;YACD,CAAC,CAAC,SAAS,GAAG,QAAQ,CAAC;QAC3B,CAAC;QACD,uBAAM,GAAN;YAEI,IAAI,CAAC,IAAI,EAAE,CAAC;QAChB,CAAC;QA/DD;YADC,YAAY,CAAC,GAAG,EAAC,IAAI,EAAC,CAAC,EAAC,cAAW,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,WAAW,CAAC,CAAA,CAAA,CAAC,CAAC;4CAInE;QATQ,MAAM;YAFlB,OAAO,CAAC,SAAS,EAAC,WAAW,CAAC;YAC9B,MAAM,CAAC,QAAQ,EAAC,sBAAsB,CAAC;WAC3B,MAAM,CAsElB;QAAD,aAAC;KAtED,AAsEC,CAtE2B,QAAQ,GAsEnC;IAtEY,uBAAM,SAsElB,CAAA;AACL,CAAC,EAvNa,gBAAgB,GAAhB,wBAAgB,KAAhB,wBAAgB,QAuN7B","file":"","sourceRoot":"..\\..\\..\\..\\..\\..\\assets\\script\\render\\states","sourcesContent":["import { MSMDsc } from \"../../../frame/StateMachine/StateDec\";\r\nimport { SiteRender } from \"../SiteRender\";\r\nimport { SLDSM } from \"../../site/SiteLine\";\r\nimport { ConvertRGBToColor, SiteLineType } from \"../../Enums\";\r\nimport { Helper } from \"../../../utility/Helper\";\r\nimport { SiteSM } from \"../../site/SiteMachine\";\r\nimport { Path } from \"../../Path/PathSM\";\r\nimport PolygonEditor from \"../../../utility/PolygonEditor\";\r\nimport { LineRender } from \"../LineRender\";\r\nimport GameObjectManage from \"../../manage/GameObjectManange\";\r\nimport { IPSM } from \"../../../frame/InputManage\";\r\n\r\nconst {mState,mLinkTo,mDefaultState,ActionUpdate,mAttach,mUnique}=MSMDsc\r\nconst {SiteRenderState,SiteRenderStateMachine}=SiteRender\r\nconst {SiteLine}=SLDSM;\r\nconst {ConvertInputPointToWorld}=IPSM\r\nexport module SiteRenderStates\r\n{\r\n    export class BaseDraw extends SiteRenderState\r\n    {\r\n        drawCache:cc.Node[] = [];\r\n        draw()\r\n        {\r\n            var g = this.context.graphics;\r\n            var drawedSite:cc.Node[] = [];\r\n            this.drawCache = drawedSite;\r\n            g.clear();\r\n            g.moveTo(0,0);\r\n            var children = this.context.node.children;\r\n            children.forEach(value=>{\r\n                var polygon = value.getComponent(PolygonEditor);\r\n                if(polygon)\r\n                {\r\n                    polygon.points.forEach((v,idx)=>{\r\n                        var point = v.add(value.position);\r\n                        if(idx===0)g.moveTo(point.x,point.y);\r\n                        else\r\n                        g.lineTo(point.x,point.y);\r\n                    });\r\n                    if(polygon.points.length>2)\r\n                    g.close();\r\n                }\r\n                else\r\n                g.circle(value.x,value.y,this.context.SiteRadius);\r\n            });\r\n            g.fill()\r\n            g.stroke();\r\n        }\r\n    }\r\n    \r\n    @mDefaultState\r\n    @mLinkTo('Active','active')\r\n    @mLinkTo('Drag','drag')\r\n    @mState('Default',SiteRenderStateMachine)\r\n    export class Default extends BaseDraw\r\n    {\r\n        Start()\r\n        {\r\n            this.draw();\r\n        }\r\n    }\r\n    @mLinkTo('Default','dragEnd')\r\n    @mState('Drag',SiteRenderStateMachine)\r\n    export class Drag extends BaseDraw\r\n    {\r\n\r\n    }\r\n    @mUnique()\r\n    @mAttach('hited')\r\n    @mState('Hited',SiteRenderStateMachine)\r\n    export class Hited extends BaseDraw\r\n    {\r\n        hs:SiteSM.SiteMachine = null;\r\n        graphics:cc.Graphics= null;\r\n        nowPath:Path.VehiclePath = null;\r\n        pathRenderArray:Path.VehiclePath[]=[];\r\n        addSiteArray:SiteSM.SiteMachine[]=[];\r\n        removeSiteArray:SiteSM.SiteMachine[]=[];\r\n        nowType:SiteLineType = SiteLineType.red;\r\n        Start(hitedSite:SiteSM.SiteMachine,point:cc.Vec2)\r\n        {\r\n            this.hs = hitedSite;\r\n            var pathRenderIns = LineRender.LineRenderStateMachine.Instance;\r\n            this.graphics = pathRenderIns.createGraphics();\r\n            var pathType = GameObjectManage.Instance.getLineType();\r\n            this.nowType = pathType;\r\n            this.nowPath = GameObjectManage.Instance.CreateLine(hitedSite.node.position,point,pathType);\r\n            this.graphics.strokeColor = ConvertRGBToColor(pathType);\r\n            this.pathRenderArray.push(this.nowPath);\r\n            this.addSiteArray.push(this.hs);\r\n        }\r\n        touch(t:cc.Touch)\r\n        {\r\n            var hited = this.context.hitTest(t.getLocation());\r\n            var point = this.context.node.convertToNodeSpaceAR(ConvertInputPointToWorld(t.getLocation(),this.context.node));\r\n            if(hited&&this.addSiteArray.every(v=>v!==hited))\r\n            {\r\n                this.hs = hited;\r\n                this.addSiteArray.push(this.hs);\r\n                this.nowPath.setPoint(this.nowPath.beginPoint,hited.node.position);\r\n                var pathType = GameObjectManage.Instance.getLineType();\r\n                this.nowPath = GameObjectManage.Instance.CreateLine(hited.node.position,point,pathType);\r\n                this.pathRenderArray.push(this.nowPath);\r\n            }\r\n            this.nowPath.setPoint(this.nowPath.beginPoint,point);\r\n        }\r\n        endHit()\r\n        {\r\n            this.done();\r\n        }\r\n        touchCancel()\r\n        {\r\n            this.endHit();\r\n        }\r\n        touchEnd()\r\n        {\r\n            this.endHit();\r\n        }\r\n        draw()\r\n        {\r\n            var g = this.graphics;\r\n            if(g)\r\n            {\r\n                g.clear();\r\n                this.pathRenderArray.forEach(v=>{\r\n                    v.changePoint.forEach((v,idx)=>{\r\n                        if(idx===0)g.moveTo(v.point.x,v.point.y);\r\n                        else\r\n                        g.lineTo(v.point.x,v.point.y);\r\n                    })\r\n                    g.stroke();\r\n                });\r\n            }\r\n            \r\n        }\r\n        update()\r\n        {\r\n            this.draw();\r\n        }\r\n        Quit()\r\n        {\r\n            this.hs = null;\r\n            this.context.dropGraphics(this.graphics);\r\n            this.graphics = null;\r\n            this.nowPath = null;\r\n            this.nowType = SiteLineType.red;\r\n            this.pathRenderArray.forEach(v=>{v.recycle()});\r\n            this.pathRenderArray = [];\r\n            for(var idx =0;idx<this.addSiteArray.length-1;idx++)\r\n            {\r\n                var v = this.addSiteArray[idx];\r\n                var nv = this.addSiteArray[idx+1];\r\n                GameObjectManage.Instance.getLine(this.nowType,null,v,nv)\r\n            }\r\n            this.addSiteArray =[];\r\n            this.removeSiteArray=[];\r\n        }\r\n    }\r\n    @mLinkTo('Default','activeEnd')\r\n    @mState('Active',SiteRenderStateMachine)\r\n    export class Active extends BaseDraw\r\n    {\r\n        base=0;\r\n        target=10;\r\n        nowLineWith = 0;\r\n        @ActionUpdate(0.4,true,1,function(){this.context.emit('activeEnd')})\r\n        action(dt)\r\n        {\r\n            this.nowLineWith= this.base+this.target*Helper.tween.easeInOutBack(dt);\r\n        }\r\n        Start()\r\n        {\r\n            this.context.graphics.strokeColor = ConvertRGBToColor(this.context.nowShowType) \r\n        }\r\n        draw()\r\n        {\r\n            super.draw();\r\n            var g = this.context.graphics;\r\n            var oldWidth = g.lineWidth;\r\n            g.lineWidth = this.nowLineWith;\r\n            g.moveTo(0,0);\r\n            var firstPath = Path.VehiclePath.findForFirstPathInAllPath(this.context.nowShowType);\r\n            while(firstPath)\r\n            {\r\n                var renderNode = firstPath.lastSite.node;\r\n                var polygon = renderNode.getComponent(PolygonEditor);\r\n                if(firstPath.isEnd)\r\n                {\r\n                    renderNode = firstPath.nextSite.node;\r\n                    var renderNode1 = firstPath.lastSite.node;\r\n                    var polygon1 = renderNode1.getComponent(PolygonEditor);\r\n                    \r\n                    if(polygon1)\r\n                    {\r\n                        polygon1.points.forEach((p,idx)=>{\r\n                            var point = p.add(renderNode.position)\r\n                            if(idx===0)g.moveTo(point.x,point.y);\r\n                            else\r\n                            g.lineTo(point.x,point.y);\r\n                        });\r\n                        if(polygon1.points.length>2)g.close();\r\n                    }\r\n                    else\r\n                    {\r\n                        g.circle(renderNode1.x,renderNode1.y,this.context.SiteRadius)\r\n                    }\r\n                }\r\n                if(polygon)\r\n                {\r\n                    polygon.points.forEach((p,idx)=>{\r\n                        var point = p.add(renderNode.position)\r\n                        if(idx===0)g.moveTo(point.x,point.y);\r\n                        else\r\n                        g.lineTo(point.x,point.y);\r\n                    });\r\n                    if(polygon.points.length>2)g.close();\r\n                }\r\n                else\r\n                {\r\n                    g.circle(renderNode.x,renderNode.y,this.context.SiteRadius);\r\n                }\r\n                g.stroke();\r\n                firstPath = firstPath.NextPath;\r\n            }\r\n            g.lineWidth = oldWidth;\r\n        }\r\n        update()\r\n        {\r\n            this.draw();\r\n        }\r\n    }\r\n}"]}