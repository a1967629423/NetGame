{"version":3,"sources":["..\\..\\..\\..\\..\\assets\\script\\render/assets\\script\\render\\SiteRender.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"..\\..\\..\\..\\..\\assets\\script\\render","sourcesContent":["import { MSM } from \"../../frame/StateMachine/StateMachine\";\r\nimport { MSMDsc } from \"../../frame/StateMachine/StateDec\";\r\nimport RenderBase, { RenderBaseState } from \"./Render\";\r\nimport { SiteLineType, SiteType } from \"../Enums\";\r\nimport { IInput, IPSM } from \"../../frame/InputManage\";\r\nimport ScenesObject from \"../../utility/ScenesObject\";\r\nimport { SiteSM } from \"../site/SiteMachine\";\r\nimport { Helper } from \"../../utility/Helper\";\r\nimport PolygonEditor from \"../../utility/PolygonEditor\";\r\n\r\nconst { ccclass, property } = cc._decorator;\r\nconst { State } = MSM;\r\nconst { mStateMachine, mSyncFunc,mSyncAttachFunc } = MSMDsc\r\nexport module SiteRender {\r\n    @ccclass\r\n    @mStateMachine\r\n    export class SiteRenderStateMachine extends RenderBase implements IInput {\r\n        @mSyncAttachFunc\r\n        @mSyncFunc\r\n        touch(touchEvent: cc.Touch) {\r\n        }\r\n        @mSyncFunc\r\n        touchStart(touchEvent: cc.Touch) {\r\n\r\n        }\r\n        @mSyncAttachFunc\r\n        @mSyncFunc\r\n        touchEnd(touchEvent: cc.Touch) {\r\n\r\n        }\r\n        @mSyncAttachFunc\r\n        @mSyncFunc\r\n        touchCancel(touchEvent: cc.Touch) {\r\n\r\n        }\r\n        childChange()\r\n        {\r\n            this.hitTestArray = [];\r\n            this.node.children.forEach(v=>{\r\n                var sm = v.getComponent(SiteSM.SiteMachine);\r\n                if(sm)this.hitTestArray.push(sm);\r\n            })\r\n            this.updateRender();\r\n        }\r\n        private static _Instance:SiteRenderStateMachine = null;\r\n        static get Instance()\r\n        {\r\n            if(!this._Instance)\r\n            {\r\n                this._Instance = ScenesObject.instance.getComponentInChildren(SiteRenderStateMachine);\r\n            }\r\n            return this._Instance;\r\n        }\r\n        hitTestArray:SiteSM.SiteMachine[] = [];\r\n        hitTest(point:cc.Vec2,...args):SiteSM.SiteMachine\r\n        {\r\n            var testPoint = this.node.convertToNodeSpaceAR(IPSM.ConvertInputPointToWorld(point,this.node));\r\n            for(var idx in this.hitTestArray)\r\n            {\r\n                var v = this.hitTestArray[idx];\r\n                var polygon = v.getComponent(PolygonEditor);\r\n                if(polygon)\r\n                {\r\n                    var ins = IPSM.InputManage.getInstance(v);\r\n                    if(ins.HitTest(point,...args))return v;\r\n                }\r\n                else\r\n                {\r\n                    if(Helper.HitTestHelper.CircleHitTest(v.node.position,testPoint,this.SiteRadius))return v;\r\n                }\r\n            }      \r\n            return null;\r\n        }\r\n        start() {\r\n            super.start();\r\n            debugger;\r\n            this.node.on(cc.Node.EventType.CHILD_ADDED,this.childChange,this)\r\n            this.node.on(cc.Node.EventType.CHILD_REMOVED,this.childChange,this)\r\n            this.node.on(cc.Node.EventType.CHILD_REORDER,this.childChange,this)\r\n            var ipIns = IPSM.InputManage.getInstance(this);\r\n            ipIns.addInput(this);\r\n            ipIns.onHitTest((point,lister)=>{\r\n                var hitedSite = this.hitTest(point,lister)\r\n                if(hitedSite)\r\n                {\r\n                    \r\n                    this.emit('hited',hitedSite,this.node.convertToNodeSpaceAR(IPSM.ConvertInputPointToWorld(point,this.node)));\r\n                    return true;\r\n                }\r\n                return false;\r\n                \r\n            },this);\r\n            this.childChange();\r\n            this.emit('lineDrag');\r\n        }\r\n        @mSyncAttachFunc\r\n        update(dt)\r\n        {\r\n            super.update(dt);\r\n        }\r\n        onDestroy()\r\n        {\r\n            this.node.off(cc.Node.EventType.CHILD_ADDED,this.childChange,this)\r\n            this.node.off(cc.Node.EventType.CHILD_REMOVED,this.childChange,this)\r\n            this.node.off(cc.Node.EventType.CHILD_REORDER,this.childChange,this)\r\n            if(SiteRenderStateMachine._Instance)SiteRenderStateMachine._Instance = null;\r\n        }\r\n        draw()\r\n        {\r\n            super.draw();\r\n        }\r\n        nowShowType:SiteLineType = SiteLineType.red;\r\n        @property\r\n        SiteRadius:number = 50;\r\n        active(LineType:SiteLineType)\r\n        {\r\n            this.nowShowType = LineType;\r\n            this.emit('active');\r\n        }\r\n        updateRender()\r\n        {\r\n            this.draw();\r\n        }\r\n    }\r\n    export class SiteRenderState extends RenderBaseState implements IInput\r\n    {\r\n        touch(touchEvent: cc.Touch) {\r\n\r\n        }\r\n        touchStart(touchEvent: cc.Touch) {\r\n\r\n        }\r\n        touchEnd(touchEvent: cc.Touch) {\r\n\r\n        }\r\n        touchCancel(touchEvent: cc.Touch) {\r\n\r\n        }\r\n        context:SiteRenderStateMachine;\r\n    }\r\n\r\n}"]}