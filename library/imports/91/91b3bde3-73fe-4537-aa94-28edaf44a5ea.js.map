{"version":3,"sources":["..\\..\\..\\..\\assets\\utility/assets\\utility\\PolygonEditor.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"..\\..\\..\\..\\assets\\utility","sourcesContent":["import { MSM } from \"../frame/StateMachine/StateMachine\";\r\nimport { MSMDsc } from \"../frame/StateMachine/StateDec\";\r\nimport { IPSM } from \"../frame/InputManage\";\r\nimport { Helper } from \"./Helper\";\r\n\r\nconst { ccclass, property, executeInEditMode, requireComponent } = cc._decorator;\r\n\r\n@ccclass\r\n@executeInEditMode\r\n@MSMDsc.mStateMachine\r\nexport default class PolygonEditor extends MSM.StateMachine {\r\n    @property\r\n    editor:boolean = false;\r\n    _display:boolean = false;\r\n    @property\r\n    get display()\r\n    {\r\n        return this._display;\r\n    }\r\n    set display(v)\r\n    {\r\n        this._display = v;\r\n        if(v)\r\n        {\r\n            this.displayInit();\r\n        }\r\n        else\r\n        {\r\n            this.dropGraphics();\r\n        }\r\n    }\r\n    @property([cc.Vec2])\r\n    points: cc.Vec2[] = [];\r\n    // LIFE-CYCLE CALLBACKS:\r\n\r\n    // onLoad () {}\r\n    g: cc.Graphics;\r\n    childerHandle:cc.Node[] = []\r\n    displayInit()\r\n    {\r\n        var node = new cc.Node(\"DisplayGraphics\");\r\n        this.g = node.addComponent(cc.Graphics);\r\n        node.setParent(this.node);\r\n    }\r\n    dropGraphics()\r\n    {\r\n        this.g.node.removeFromParent();\r\n        this.g = null;\r\n    }\r\n    start() {\r\n        if(CC_EDITOR)\r\n        {\r\n            super.start();\r\n            if(this._display)\r\n            {\r\n                this.displayInit();\r\n            }\r\n        }\r\n        else\r\n        {\r\n            //this.node.children.forEach(v=>{if(v.name==='DisplayGraphics')v.removeFromParent()})\r\n            var ins = IPSM.InputManage.getInstance(this);\r\n            ins.onHitTest((p)=>{\r\n                var testPoint = this.node.convertToNodeSpaceAR(IPSM.ConvertInputPointToWorld(p,this.node));\r\n                return Helper.HitTestHelper.RayPolygonHitTest(this.points,testPoint);\r\n            },this);\r\n        }\r\n    }\r\n\r\n    update(dt) {\r\n        super.update(dt);\r\n        if (CC_EDITOR&&this._display) {\r\n            this.g.clear();\r\n            this.points.forEach((v, idx) => {\r\n                if (idx === 0) {\r\n                    this.g.moveTo(v.x, v.y);\r\n                    return;\r\n                }\r\n                this.g.lineTo(v.x,v.y);\r\n            });\r\n            if(this.points.length>2)\r\n            this.g.close();\r\n            this.g.stroke();\r\n            this.g.fill();\r\n        }\r\n\r\n    }\r\n}\r\nexport module PolyGonEditorStates\r\n{\r\n    export class PS extends MSM.State\r\n    {\r\n        context:PolygonEditor\r\n    }\r\n    @MSMDsc.mLinkTo('Editor','editor')\r\n    @MSMDsc.mDefaultState\r\n    @MSMDsc.mState('Default',PolygonEditor)\r\n    export class Default extends PS\r\n    {\r\n        update()\r\n        {\r\n            if(this.context.editor)\r\n            {\r\n                this.context.emit('editor');\r\n            }\r\n        }\r\n    }\r\n    @MSMDsc.mLinkTo('Default','editorEnd')\r\n    @MSMDsc.mState('Editor',PolygonEditor)\r\n    export class Editor extends PS\r\n    {\r\n        update()\r\n        {\r\n            if(this.context.points.length===this.context.childerHandle.length)\r\n            {\r\n                for(var idx in this.context.points)\r\n                {\r\n                    var p = this.context.points[idx];\r\n                    var h = this.context.childerHandle[idx];\r\n                    p.set(h.position);\r\n                }\r\n            }\r\n            else\r\n            {\r\n                this.childerUpdate();\r\n            }\r\n            if(!this.context.editor)\r\n            {\r\n                this.context.emit('editorEnd');\r\n            }\r\n        }\r\n        childerUpdate()\r\n        {\r\n            console.log('update');\r\n            this.context.childerHandle.forEach(v=>{\r\n                v.removeFromParent();\r\n            });\r\n            this.context.childerHandle = [];\r\n            this.context.points.forEach((v,idx)=>{\r\n                var node=  new cc.Node('handle.'+idx);\r\n                this.context.childerHandle.push(node);\r\n                node.setParent(this.context.node);\r\n                node.setPosition(v);\r\n            })\r\n        }\r\n        Start()\r\n        {\r\n\r\n            if(this.context.childerHandle.length===0)\r\n            {\r\n                this.childerUpdate();\r\n            }\r\n        }\r\n        Quit()\r\n        {\r\n            this.context.childerHandle.forEach(v=>{\r\n                v.removeFromParent();\r\n            });\r\n            this.context.childerHandle = [];\r\n        }\r\n    }\r\n}\r\n"]}