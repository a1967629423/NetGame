{"version":3,"sources":["..\\..\\..\\..\\assets\\frame/assets\\frame\\InputManage.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"..\\..\\..\\..\\assets\\frame","sourcesContent":["import setToFullScene from \"../utility/setToFullScene\";\r\nimport { MSMDsc } from \"./StateMachine/StateDec\";\r\nimport { MSM } from \"./StateMachine/StateMachine\";\r\nimport { InputType } from \"../script/Enums\";\r\n/**\r\n * 输入管理器\r\n * 全局输入管理器会生成在Camera下，所以需要保持Camera始终在游戏物体上方\r\n */\r\nexport interface IInput {\r\n    touch(touchEvent: cc.Touch);\r\n    touchStart(touchEvent: cc.Touch);\r\n    touchEnd(touchEvent: cc.Touch);\r\n    touchCancel(touchEvent: cc.Touch);\r\n}\r\nexport interface IInput_mouse\r\n{\r\n    mouseDown(mouseEvent:cc.Event.EventMouse);\r\n    mouseUp(mouseEvent:cc.Event.EventMouse);\r\n    mouseEnter(mouseEvent:cc.Event.EventMouse);\r\n    mouseLeave(mouseEvent:cc.Event.EventMouse);\r\n    mouseWheel(mouseEvent:cc.Event.EventMouse);\r\n    mouseMove(mouseEvent:cc.Event.EventMouse);\r\n}\r\nexport interface IInput_keyborad \r\n{\r\n\r\n}\r\nconst { ccclass, property } = cc._decorator;\r\nconst { mStateMachine, mSyncFunc } = MSMDsc;\r\nconst { StateMachine, State } = MSM;\r\ntype HitTestCallback={callback:(point:cc.Vec2,listener:cc.TouchOneByOne)=>boolean,target:object|null}\r\nexport module IPSM {\r\n\r\n    @mStateMachine\r\n    @ccclass\r\n    export class InputManage extends StateMachine implements IInput {\r\n        @mSyncFunc\r\n        touchStart(touchEvent: cc.Touch) {\r\n        }\r\n        @mSyncFunc\r\n        touchEnd(touchEvent: cc.Touch) {\r\n\r\n        }\r\n        @mSyncFunc\r\n        touchCancel(touchEvent: cc.Touch) {\r\n\r\n        }\r\n        @mSyncFunc\r\n        touch(touchEvent: cc.Touch) {\r\n\r\n        }\r\n        @mSyncFunc\r\n        InputEvent(event:cc.Event,eventName:string)\r\n        {\r\n\r\n        }\r\n        private _InputEventAdd(eventName:string,eventType:string)\r\n        {\r\n            var fun = (event:cc.Event)=>{\r\n                this.InputEvent(event,eventName);\r\n            }\r\n            this.InputEventList.push({callback:fun,eventType:eventType})\r\n            return fun;\r\n        }\r\n        @property([cc.Component])\r\n        targets: cc.Component[] = [];\r\n        static g_InputManage: { Camera: cc.Camera, Manage: InputManage }[] = [];\r\n        /**\r\n         * 0=local\r\n         * 1=global\r\n         */\r\n        exState: number = 0;\r\n        _tar: any[] = [];\r\n        customHitTest:HitTestCallback[] = []\r\n        InputEventList:{callback:(event:cc.Event,eventName:string)=>void,eventType:string}[] = []\r\n        enableListens:{touch:boolean,mouse:boolean,keyboard:boolean} = {touch:false,mouse:false,keyboard:false}\r\n        private instanceofIInput(a: any): boolean {\r\n            if (a['touch']) return true\r\n            return false\r\n        }\r\n        static enableCollider:boolean = false;\r\n        static getInstance(tg?: {getComponent(c:typeof cc.Component),addComponent(c:typeof cc.Component)},collider:boolean=false): InputManage {\r\n            var ins: InputManage = null;\r\n            if (tg) {\r\n                ins = tg.getComponent(InputManage);\r\n                if (!ins) {\r\n                    ins = tg.addComponent(InputManage);\r\n                    ins.exState = 0;\r\n                    if(collider&&!this.enableCollider)\r\n                    {\r\n                        cc.director.getCollisionManager().enabled = true;\r\n                        this.enableCollider = true;\r\n                    }\r\n                }\r\n            }\r\n            else {\r\n                var store = this.g_InputManage.find(value => { return value.Camera == cc.Camera.main });\r\n\r\n                if (!store) {\r\n                    if(cc.Camera.main)\r\n                    {\r\n                        var newNode = new cc.Node(\"inputManage\");\r\n                        ins = newNode.addComponent(InputManage);\r\n                        newNode.addComponent(setToFullScene);\r\n                        newNode.setParent(cc.Camera.main.node);\r\n                        ins.exState = 1;\r\n                        this.g_InputManage.push({ Camera: cc.Camera.main, Manage: ins });\r\n                    }\r\n                    else\r\n                    {\r\n                        cc.Camera.cameras.forEach(value => {\r\n                            var newNode = new cc.Node(\"inputManage\");\r\n                            ins = newNode.addComponent(InputManage);\r\n                            newNode.addComponent(setToFullScene);\r\n                            newNode.setParent(value.node);\r\n                            ins.exState = 1;\r\n                            this.g_InputManage.push({ Camera: value, Manage: ins });\r\n                        })\r\n                    }\r\n                }\r\n                else {\r\n                    ins = store.Manage;\r\n                }\r\n            }\r\n            return ins;\r\n        }\r\n        addInput(inp:any,type?:InputType)\r\n        addInput(inp:IInput,type:InputType.touch):void\r\n        addInput(inp:IInput_mouse,type:InputType.mouse):void\r\n        addInput(inp:IInput_mouse,type:InputType.keyboard):void\r\n        addInput(inp:any,type:InputType=InputType.touch) {\r\n            switch(type)\r\n            {\r\n                case InputType.touch:\r\n                this._addInput_touch(inp);\r\n                break;\r\n                case InputType.mouse:\r\n                this._addInput_mouse(inp);\r\n                break;\r\n                case InputType.keyboard:\r\n                this._addInput_keyboard(inp);\r\n                break;\r\n            }\r\n            if(!this._tar.find(value=>value===inp))\r\n            {\r\n                this._tar.push(inp);\r\n            }          \r\n        }\r\n        private _addInput_mouse(inp:IInput_mouse)\r\n        {\r\n            if(!this.enableListens.mouse)\r\n            {\r\n                var downType = cc.Node.EventType.MOUSE_DOWN\r\n                var upType = cc.Node.EventType.MOUSE_UP;\r\n                var enterType = cc.Node.EventType.MOUSE_ENTER\r\n                var leaveType = cc.Node.EventType.MOUSE_LEAVE;\r\n                var wheelType = cc.Node.EventType.MOUSE_WHEEL;\r\n                var moveType = cc.Node.EventType.MOUSE_MOVE;\r\n                this.node.on(downType,this._InputEventAdd('mouseDown',downType),this);\r\n                this.node.on(upType,this._InputEventAdd('mouseUp',upType),this);\r\n                this.node.on(enterType,this._InputEventAdd('mouseEnter',enterType),this);\r\n                this.node.on(leaveType,this._InputEventAdd('mouseLeave',leaveType),this);\r\n                this.node.on(wheelType,this._InputEventAdd('mouseWheel',wheelType),this);\r\n                this.node.on(moveType,this._InputEventAdd('mouseMove',moveType),this);\r\n                this.enableListens.mouse= true;\r\n            }\r\n        }\r\n        private _addInput_keyboard(inp:IInput_keyborad)\r\n        {\r\n            if(!this.enableListens.keyboard)\r\n            {\r\n                this.enableListens.keyboard = true;\r\n            }\r\n        }\r\n        private _addInput_touch(inp:IInput)\r\n        {\r\n            if(!this.enableListens.touch)\r\n            {\r\n                this.node.on(cc.Node.EventType.TOUCH_MOVE, this.touch, this);\r\n                this.node.on(cc.Node.EventType.TOUCH_START, this.touchStart, this);\r\n                this.node.on(cc.Node.EventType.TOUCH_END, this.touchEnd, this);\r\n                this.node.on(cc.Node.EventType.TOUCH_CANCEL, this.touchCancel, this);\r\n                this.enableListens.touch = true;\r\n            }\r\n        }\r\n        // addInput(inp:IInput_mouse)\r\n        // {\r\n\r\n        // }\r\n        removeInput(inp: IInput) {\r\n            this._tar.splice(this._tar.findIndex(value => value === inp), 1)\r\n        }\r\n        start() {\r\n            super.start();\r\n            this.targets.forEach(value => {\r\n                var inter = <IInput><unknown>value\r\n                if (this.instanceofIInput(value)) {\r\n                    this._tar.push(inter)\r\n                }\r\n                else {\r\n                    console.warn(\"对象未实现接口IInput\")\r\n                    console.warn(value)\r\n                }\r\n            })\r\n            if(this.exState === 0)\r\n            {\r\n                var test = this.node['_hitTest'];\r\n                //hookHitTest\r\n                this.node['_hitTest'] = ()=>{\r\n                    if(this.HitTest(...arguments))return true;\r\n                    if(test.apply(this.node,arguments))return true\r\n                    return false;\r\n                }\r\n            }\r\n\r\n\r\n        }\r\n        HitTest(...arg):boolean\r\n        {\r\n            for(var i = this.customHitTest.length-1;i>=0;i--)\r\n            {\r\n                var target = this.customHitTest[i].target;\r\n                if(!target)target=this.node;\r\n                if(this.customHitTest[i].callback.apply(target,arguments))return true;\r\n            }\r\n            return false;\r\n        }\r\n        onHitTest(hitTest:(this:cc.Node,point:cc.Vec2,listener:cc.TouchOneByOne)=>boolean,target:object = null)\r\n        {\r\n            if(!this.customHitTest.find(value=>value.callback===hitTest&&value.target===target))\r\n            {\r\n                this.customHitTest.unshift({callback:hitTest,target})\r\n            } \r\n        }\r\n        offHitTest(hitTest:(this:cc.Node,point:cc.Vec2,listener:cc.TouchOneByOne)=>boolean,target:object=null)\r\n        {\r\n            var idx = this.customHitTest.findIndex(value=>value.callback===hitTest&&value.target===target);\r\n            if(idx>-1)\r\n            this.customHitTest.splice(idx,1);\r\n        }\r\n        onDisable() {\r\n            super.onDisable();\r\n            if(this.enableListens.touch)\r\n            {\r\n                this.node.off(cc.Node.EventType.TOUCH_MOVE, this.touch, this);\r\n                this.node.off(cc.Node.EventType.TOUCH_START, this.touchStart, this);\r\n                this.node.off(cc.Node.EventType.TOUCH_END, this.touchEnd, this);\r\n                this.node.off(cc.Node.EventType.TOUCH_CANCEL, this.touchCancel, this);\r\n            }\r\n            if(this.InputEventList.length>0)\r\n            {\r\n                this.InputEventList.forEach(value=>{\r\n                    this.node.off(value.eventType,value.callback,this)\r\n                });\r\n                this.InputEventList = [];\r\n            }\r\n        }\r\n    }\r\n    export class InputState extends State implements IInput {\r\n        touchStart(touchEvent: cc.Touch) {\r\n        }\r\n        touchEnd(touchEvent: cc.Touch) {\r\n        }\r\n        touchCancel(touchEvent: cc.Touch) {\r\n        }\r\n        touch(touchEvent: cc.Touch) {\r\n        }\r\n        ctx: InputManage\r\n        get context(): InputManage {\r\n            return <InputManage>this.ctx\r\n        }\r\n        set context(value) {\r\n            this.ctx = value;\r\n        }\r\n        InputEvent(event:cc.Event,eventName:string)\r\n        {\r\n\r\n        }\r\n    }\r\n    var CameraVec = cc.v2();\r\n    export function ConvertInputPointToWorld(point:cc.Vec2,node:cc.Node)\r\n    {\r\n        var Camera = cc.Camera.findCamera(node);\r\n        if(Camera)\r\n        {\r\n            Camera.getCameraToWorldPoint(point,CameraVec);\r\n        }\r\n        else\r\n        {\r\n            CameraVec.set(point);\r\n        }\r\n        return CameraVec;\r\n    }\r\n    export function ConvertInputPointToWorldDec<T extends cc.Component>(target:T, methodName: string, paramIndex: number)\r\n    {\r\n        var old:Function = target[methodName];\r\n        target[methodName]=function(){\r\n            var param = arguments[paramIndex];\r\n            if(param&&param['x']&&param['y'])\r\n            {\r\n                arguments[paramIndex] = ConvertInputPointToWorld(param,this.node);\r\n            }\r\n            old.apply(this,arguments);\r\n        }\r\n    }\r\n    \r\n\r\n}\r\n"]}