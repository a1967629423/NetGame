{"version":3,"sources":["..\\..\\..\\..\\..\\assets\\script\\render/assets\\script\\render\\LineRender.ts"],"names":[],"mappings":";;;;;AAAA,sEAA4D;AAC5D,8DAA2D;AAC3D,mCAAuD;AACvD,uDAAuD;AACvD,+CAA8C;AAE9C,2CAA0C;AAC1C,2DAAsD;AACtD,yCAAsC;AAGhC,IAAA,kBAAqC,EAAnC,oBAAO,EAAE,sBAAQ,CAAmB;AACpC,IAAA,8CAAY,EAAE,gCAAK,CAAS;AAC5B,IAAA,+CAAa,EAAE,uCAAS,CAAY;AAC5C,IAAc,UAAU,CA4FvB;AA5FD,WAAc,UAAU;IAGpB;QAA4C,0CAAU;QAFtD;YAAA,qEA2EC;YAxDG,gBAAU,GAAoB,IAAI,CAAC;YA+BnC,eAAS,GAAU,EAAE,CAAC;YACtB,gBAAU,GAAqC,IAAI,CAAC;;YAuBpD,iBAAiB;QACrB,CAAC;QAvEG,sCAAK,GAAL,UAAM,UAAoB;QAC1B,CAAC;QAED,2CAAU,GAAV,UAAW,UAAoB;YAC3B,IAAG,IAAI,CAAC,UAAU,EAClB;gBACI,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,CAAC;aACpD;QACL,CAAC;QAED,yCAAQ,GAAR,UAAS,UAAoB;QAC7B,CAAC;QAED,4CAAW,GAAX,UAAY,UAAoB;QAChC,CAAC;QAED,wCAAO,GAAP,UAAQ,KAAa,EAAC,MAAM;YAExB,IAAI,SAAS,GAAG,aAAI,CAAC,WAAW,CAAC,OAAO,CAAC;YACzC,IAAI,SAAS,GAAC,IAAI,CAAC,IAAI,CAAC,oBAAoB,CAAC,kBAAI,CAAC,wBAAwB,CAAC,KAAK,EAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;YAC7F,IAAG,SAAS,CAAC,MAAM,GAAC,CAAC,EACrB;gBACI,KAAI,IAAI,CAAC,GAAE,CAAC,EAAC,CAAC,GAAC,SAAS,CAAC,MAAM,EAAC,CAAC,EAAE,EACnC;oBACI,IAAI,KAAK,GAAG,SAAS,CAAC,CAAC,CAAC,CAAC;oBACzB,IAAI,MAAM,GAAG,KAAK,CAAC,WAAW,CAAC;oBAC/B,IAAI,SAAS,GAAgB,KAAK,CAAC,QAAQ,CAAC,IAAI,CAAC,QAAQ,CAAC;oBAC1D,KAAI,IAAI,GAAG,GAAC,CAAC,EAAC,GAAG,GAAC,MAAM,CAAC,MAAM,EAAC,GAAG,EAAE,EACrC;wBACI,IAAI,QAAQ,GAAG,MAAM,CAAC,GAAG,CAAC,CAAC,KAAK,CAAC;wBACjC,IAAG,eAAM,CAAC,aAAa,CAAC,WAAW,CAAC,SAAS,EAAC,QAAQ,EAAC,SAAS,EAAC,IAAI,CAAC,SAAS,CAAC,EAChF;4BACI,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;4BACxB,OAAO,IAAI,CAAC;yBACf;wBACD,SAAS,GAAG,QAAQ,CAAC;qBACxB;iBACJ;aACJ;YACD,OAAO,KAAK,CAAC;QACjB,CAAC;QACO,4CAAW,GAAnB;YAEI,IAAI,CAAC,YAAY,EAAE,CAAA;QACvB,CAAC;QAID,sCAAK,GAAL;YACI,iBAAM,KAAK,WAAE,CAAC;YACd,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE,CAAC,IAAI,CAAC,SAAS,CAAC,WAAW,EAAC,IAAI,CAAC,WAAW,EAAC,IAAI,CAAC,CAAC;YAClE,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE,CAAC,IAAI,CAAC,SAAS,CAAC,aAAa,EAAC,IAAI,CAAC,WAAW,EAAC,IAAI,CAAC,CAAC;YACpE,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE,CAAC,IAAI,CAAC,SAAS,CAAC,aAAa,EAAC,IAAI,CAAC,WAAW,EAAC,IAAI,CAAC,CAAC;YACpE,IAAI,EAAE,GAAG,kBAAI,CAAC,WAAW,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC;YAC5C,EAAE,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;YAClB,EAAE,CAAC,SAAS,CAAC,IAAI,CAAC,OAAO,EAAC,IAAI,CAAC,CAAC;YAChC,IAAI,CAAC,UAAU,GAAG,sBAAY,CAAC,QAAQ,CAAC,IAAI,CAAC,sBAAsB,CAAC,uBAAU,CAAC,sBAAsB,CAAC,CAAC;YACvG,IAAI,CAAC,IAAI,EAAE,CAAC;QAChB,CAAC;QACD,0CAAS,GAAT;YAEI,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,IAAI,CAAC,SAAS,CAAC,WAAW,EAAC,IAAI,CAAC,WAAW,EAAC,IAAI,CAAC,CAAC;YACnE,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,IAAI,CAAC,SAAS,CAAC,aAAa,EAAC,IAAI,CAAC,WAAW,EAAC,IAAI,CAAC,CAAC;YACrE,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,IAAI,CAAC,SAAS,CAAC,aAAa,EAAC,IAAI,CAAC,WAAW,EAAC,IAAI,CAAC,CAAC;QACzE,CAAC;QACD,qCAAI,GAAJ;YAEI,iBAAM,IAAI,WAAE,CAAC;QACjB,CAAC;QApED;YADC,SAAS;2DAET;QAED;YADC,SAAS;gEAMT;QAED;YADC,SAAS;8DAET;QAED;YADC,SAAS;iEAET;QAgCD;YADC,QAAQ;iEACa;QAhDb,sBAAsB;YAFlC,OAAO;YACP,aAAa;WACD,sBAAsB,CAyElC;QAAD,6BAAC;KAzED,AAyEC,CAzE2C,gBAAU,GAyErD;IAzEY,iCAAsB,yBAyElC,CAAA;IACD;QAAqC,mCAAe;QAApD;;QAcA,CAAC;QAZG,+BAAK,GAAL,UAAM,UAAoB;QAC1B,CAAC;QACD,oCAAU,GAAV,UAAW,UAAoB;QAE/B,CAAC;QACD,kCAAQ,GAAR,UAAS,UAAoB;QAE7B,CAAC;QACD,qCAAW,GAAX,UAAY,UAAoB;QAEhC,CAAC;QAEL,sBAAC;IAAD,CAdA,AAcC,CAdoC,wBAAe,GAcnD;IAdY,0BAAe,kBAc3B,CAAA;AACL,CAAC,EA5Fa,UAAU,GAAV,kBAAU,KAAV,kBAAU,QA4FvB","file":"","sourceRoot":"..\\..\\..\\..\\..\\assets\\script\\render","sourcesContent":["import { MSM } from \"../../frame/StateMachine/StateMachine\";\r\nimport { MSMDsc } from \"../../frame/StateMachine/StateDec\";\r\nimport RenderBase, { RenderBaseState } from \"./Render\";\r\nimport { IInput, IPSM } from \"../../frame/InputManage\";\r\nimport { Helper } from \"../../utility/Helper\";\r\nimport { SLDSM } from \"../site/SiteLine\";\r\nimport { SiteRender } from \"./SiteRender\";\r\nimport ScenesObject from \"../../utility/ScenesObject\";\r\nimport { Path } from \"../Path/PathSM\";\r\n\r\n\r\nconst { ccclass, property } = cc._decorator;\r\nconst { StateMachine, State } = MSM;\r\nconst { mStateMachine, mSyncFunc } = MSMDsc;\r\nexport module LineRender {\r\n    @ccclass\r\n    @mStateMachine\r\n    export class LineRenderStateMachine extends RenderBase implements IInput {\r\n        @mSyncFunc\r\n        touch(touchEvent: cc.Touch) {\r\n        }\r\n        @mSyncFunc\r\n        touchStart(touchEvent: cc.Touch) {\r\n            if(this.siteRender)\r\n            {\r\n                this.siteRender.active(this._HitedLine.PathType);\r\n            }\r\n        }\r\n        @mSyncFunc\r\n        touchEnd(touchEvent: cc.Touch) {\r\n        }\r\n        @mSyncFunc\r\n        touchCancel(touchEvent: cc.Touch) {\r\n        }\r\n        _HitedLine:Path.VehiclePath = null;\r\n        HitTest(point:cc.Vec2,listen):boolean\r\n        {\r\n            var childrens = Path.VehiclePath.allPath;\r\n            var testPoint=this.node.convertToNodeSpaceAR(IPSM.ConvertInputPointToWorld(point,this.node));\r\n            if(childrens.length>1)\r\n            {\r\n                for(var i =0;i<childrens.length;i++)\r\n                {\r\n                    var nSite = childrens[i];\r\n                    var points = nSite.changePoint;\r\n                    var lastPoint:Helper.Point = nSite.lastSite.node.position; \r\n                    for(var idx=0;idx<points.length;idx++)\r\n                    {\r\n                        var nowPoint = points[idx].point;\r\n                        if(Helper.HitTestHelper.LineHitTest(lastPoint,nowPoint,testPoint,this.lineWidth))\r\n                        {\r\n                            this._HitedLine = nSite;\r\n                            return true;\r\n                        }\r\n                        lastPoint = nowPoint;\r\n                    }\r\n                }\r\n            }\r\n            return false;\r\n        }\r\n        private childChange()\r\n        {\r\n            this.updateRender()\r\n        }\r\n        @property\r\n        lineWidth:number = 10;\r\n        siteRender:SiteRender.SiteRenderStateMachine = null;\r\n        start() {\r\n            super.start();\r\n            this.node.on(cc.Node.EventType.CHILD_ADDED,this.childChange,this);\r\n            this.node.on(cc.Node.EventType.CHILD_REMOVED,this.childChange,this);\r\n            this.node.on(cc.Node.EventType.CHILD_REORDER,this.childChange,this);\r\n            var im = IPSM.InputManage.getInstance(this);\r\n            im.addInput(this);\r\n            im.onHitTest(this.HitTest,this);\r\n            this.siteRender = ScenesObject.instance.node.getComponentInChildren(SiteRender.SiteRenderStateMachine);\r\n            this.draw();\r\n        }\r\n        onDestroy()\r\n        {\r\n            this.node.off(cc.Node.EventType.CHILD_ADDED,this.childChange,this);\r\n            this.node.off(cc.Node.EventType.CHILD_REMOVED,this.childChange,this);\r\n            this.node.off(cc.Node.EventType.CHILD_REORDER,this.childChange,this);\r\n        }\r\n        draw()\r\n        {\r\n            super.draw();\r\n        }\r\n\r\n        // update (dt) {}\r\n    }\r\n    export class LineRenderState extends RenderBaseState implements IInput\r\n    {\r\n        touch(touchEvent: cc.Touch) {\r\n        }\r\n        touchStart(touchEvent: cc.Touch) {\r\n\r\n        }\r\n        touchEnd(touchEvent: cc.Touch) {\r\n\r\n        }\r\n        touchCancel(touchEvent: cc.Touch) {\r\n\r\n        }\r\n        context:LineRenderStateMachine\r\n    }\r\n}\r\n"]}